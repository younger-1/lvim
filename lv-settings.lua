lvim.autocommands._auto_resize["1"]["1"] = "VimResized"
lvim.autocommands._auto_resize["1"]["2"] = "*"
lvim.autocommands._auto_resize["1"]["3"] = "tabdo wincmd ="
lvim.autocommands._buffer_bindings["1"]["1"] = "FileType"
lvim.autocommands._buffer_bindings["1"]["2"] = "floaterm"
lvim.autocommands._buffer_bindings["1"]["3"] = "nnoremap <silent> <buffer> q :q<CR>"
lvim.autocommands.custom_groups["1"]["1"] = "BufWinEnter"
lvim.autocommands.custom_groups["1"]["2"] = "*"
lvim.autocommands.custom_groups["1"]["3"] = "if line(\"'\\\"\") >= 1 && line(\"'\\\"\") <= line(\"$\") | exe \"normal! g`\\\"\" | endif "
lvim.autocommands.custom_groups["2"]["1"] = "BufNewFile,BufRead"
lvim.autocommands.custom_groups["2"]["2"] = "/dev/shm/gopass.*,/run/shm/gopass.*"
lvim.autocommands.custom_groups["2"]["3"] = "setlocal noswapfile nobackup noundofile"
lvim.autocommands.custom_groups["3"]["1"] = "InsertEnter"
lvim.autocommands.custom_groups["3"]["2"] = "*"
lvim.autocommands.custom_groups["3"]["3"] = ":normal! zz"
lvim.autocommands.custom_groups["4"]["1"] = "VimLeave"
lvim.autocommands.custom_groups["4"]["2"] = "*"
lvim.autocommands.custom_groups["4"]["3"] = "set guicursor=a:ver25"
lvim.autocommands.custom_groups["5"]["1"] = "User"
lvim.autocommands.custom_groups["5"]["2"] = "PackerCompileDone"
lvim.autocommands.custom_groups["5"]["3"] = ":lua require('young.mod.notify').yntf('üé¥ PackerCompile done')"
lvim.autocommands._formatoptions["1"]["1"] = "BufWinEnter,BufRead,BufNewFile"
lvim.autocommands._formatoptions["1"]["2"] = "*"
lvim.autocommands._formatoptions["1"]["3"] = "setlocal formatoptions-=c formatoptions-=r formatoptions-=o"
lvim.autocommands._general_lsp["1"]["1"] = "FileType"
lvim.autocommands._general_lsp["1"]["2"] = "lspinfo,lsp-installer,null-ls-info"
lvim.autocommands._general_lsp["1"]["3"] = "nnoremap <silent> <buffer> q :close<CR>"
lvim.autocommands._general_settings["1"]["1"] = "FileType"
lvim.autocommands._general_settings["1"]["2"] = "qf,help,man"
lvim.autocommands._general_settings["1"]["3"] = "nnoremap <silent> <buffer> q :close<CR>"
lvim.autocommands._general_settings["2"]["1"] = "TextYankPost"
lvim.autocommands._general_settings["2"]["2"] = "*"
lvim.autocommands._general_settings["2"]["3"] = "lua require('vim.highlight').on_yank({higroup = 'Search', timeout = 200})"
lvim.autocommands._general_settings["3"]["1"] = "BufWinEnter"
lvim.autocommands._general_settings["3"]["2"] = "dashboard"
lvim.autocommands._general_settings["3"]["3"] = "setlocal cursorline signcolumn=yes cursorcolumn number"
lvim.autocommands._general_settings["4"]["1"] = "BufWritePost"
lvim.autocommands._general_settings["4"]["2"] = "/home/xavier/.config/lvim/config.lua"
lvim.autocommands._general_settings["4"]["3"] = "lua require('lvim.config'):reload()"
lvim.autocommands._general_settings["5"]["1"] = "FileType"
lvim.autocommands._general_settings["5"]["2"] = "qf"
lvim.autocommands._general_settings["5"]["3"] = "set nobuflisted"
lvim.autocommands._git["1"]["1"] = "FileType"
lvim.autocommands._git["1"]["2"] = "gitcommit"
lvim.autocommands._git["1"]["3"] = "setlocal wrap"
lvim.autocommands._git["2"]["1"] = "FileType"
lvim.autocommands._git["2"]["2"] = "gitcommit"
lvim.autocommands._git["2"]["3"] = "setlocal spell"
lvim.autocommands._markdown["1"]["1"] = "FileType"
lvim.autocommands._markdown["1"]["2"] = "markdown"
lvim.autocommands._markdown["1"]["3"] = "setlocal wrap"
lvim.autocommands._markdown["2"]["1"] = "FileType"
lvim.autocommands._markdown["2"]["2"] = "markdown"
lvim.autocommands._markdown["2"]["3"] = "setlocal spell"
lvim.builtin.alpha.active = true
lvim.builtin.alpha.dashboard.section.buttons.entries["1"]["1"] = "SPC f"
lvim.builtin.alpha.dashboard.section.buttons.entries["1"]["2"] = "Ôúù  Find File"
lvim.builtin.alpha.dashboard.section.buttons.entries["1"]["3"] = "<CMD>Telescope find_files<CR>"
lvim.builtin.alpha.dashboard.section.buttons.entries["2"]["1"] = "SPC n"
lvim.builtin.alpha.dashboard.section.buttons.entries["2"]["2"] = "Ôúì  New File"
lvim.builtin.alpha.dashboard.section.buttons.entries["2"]["3"] = "<CMD>ene!<CR>"
lvim.builtin.alpha.dashboard.section.buttons.entries["3"]["1"] = "SPC P"
lvim.builtin.alpha.dashboard.section.buttons.entries["3"]["2"] = "Ôòà  Recent Projects "
lvim.builtin.alpha.dashboard.section.buttons.entries["3"]["3"] = "<CMD>Telescope projects<CR>"
lvim.builtin.alpha.dashboard.section.buttons.entries["4"]["1"] = "SPC s r"
lvim.builtin.alpha.dashboard.section.buttons.entries["4"]["2"] = "ÔÉÖ  Recently Used Files"
lvim.builtin.alpha.dashboard.section.buttons.entries["4"]["3"] = "<CMD>Telescope oldfiles<CR>"
lvim.builtin.alpha.dashboard.section.buttons.entries["5"]["1"] = "SPC s t"
lvim.builtin.alpha.dashboard.section.buttons.entries["5"]["2"] = "ÔûÉ  Find Word"
lvim.builtin.alpha.dashboard.section.buttons.entries["5"]["3"] = "<CMD>Telescope live_grep<CR>"
lvim.builtin.alpha.dashboard.section.buttons.entries["6"]["1"] = "SPC L c"
lvim.builtin.alpha.dashboard.section.buttons.entries["6"]["2"] = "Óòï  Configuration"
lvim.builtin.alpha.dashboard.section.buttons.entries["6"]["3"] = "<CMD>edit /home/xavier/.config/lvim/config.lua <CR>"
lvim.builtin.alpha.dashboard.section.footer.opts.hl = "Number"
lvim.builtin.alpha.dashboard.section.footer.opts.position = "center"
lvim.builtin.alpha.dashboard.section.footer.type = "text"
lvim.builtin.alpha.dashboard.section.footer.val["1"] = "       "
lvim.builtin.alpha.dashboard.section.footer.val["2"] = " lunarvim.org"
lvim.builtin.alpha.dashboard.section.footer.val["3"] = "rolling-08d3df2"
lvim.builtin.alpha.dashboard.section.header.opts.hl = "Label"
lvim.builtin.alpha.dashboard.section.header.opts.position = "center"
lvim.builtin.alpha.dashboard.section.header.type = "text"
lvim.builtin.alpha.dashboard.section.header.val["1"] = "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"
lvim.builtin.alpha.dashboard.section.header.val["10"] = "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ë‚¢Ñ‚°Ä‚†Ä‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"
lvim.builtin.alpha.dashboard.section.header.val["11"] = "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢∫‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"
lvim.builtin.alpha.dashboard.section.header.val["12"] = "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚†â‚†ë‚†¢‚¢Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"
lvim.builtin.alpha.dashboard.section.header.val["13"] = "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†à‚†ë‚†¢‚†Ñ‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†¢‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"
lvim.builtin.alpha.dashboard.section.header.val["14"] = "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ê‚†¢‚†Ñ‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£ø‚°ü‚†Ä‚†à‚†ë‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"
lvim.builtin.alpha.dashboard.section.header.val["15"] = "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Å‚†í‚††‚†§‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚£ø‚†Å‚†Ä‚†Ä‚¢Ä‚£º‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"
lvim.builtin.alpha.dashboard.section.header.val["16"] = "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚£∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†Å‚†í‚†Ç‚†§‚†§‚†Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚£º‚£ø‚†á‚†Ä‚†Ä‚¢Ä‚£∏‚£ø‚°ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"
lvim.builtin.alpha.dashboard.section.header.val["17"] = "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£§‚°Ñ‚†Ä‚†Ä‚†Ä‚£†‚£§‚†Ä‚†Ä‚¢†‚£≠‚£Ä‚£§‚£§‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£§‚£§‚£§‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚¢†‚£§‚¢Ä‚£§‚£§‚£Ñ‚†Ä‚†Ä‚£ø‚£ø‚†Ä‚†â‚£π‚£ø‚†è‚†â‚†â‚¢±‚£∂‚£∂‚£∂‚°¶‚†Ä‚†Ä‚†Ä‚¢†‚£∂‚£¶‚£¥‚£¶‚£†‚£¥‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä"
lvim.builtin.alpha.dashboard.section.header.val["18"] = "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚†á‚†Ä‚†Ä‚†Ä‚£ø‚°á‚†Ä‚†Ä‚£ø‚°ø‚†â‚†Ä‚†à‚£ø‚£ß‚†Ä‚†Ä‚†∞‚†ø‚†ã‚†Ä‚†Ä‚¢π‚£ø‚†Ä‚†Ä‚†Ä‚£ø‚°ø‚†ã‚†Ä‚†π‚†ø‚†Ä‚†Ä‚¢ª‚£ø‚°á‚¢†‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚†à‚†â‚¢π‚£ø‚°á‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚°è‚¢π‚£ø‚°è‚¢π‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä"
lvim.builtin.alpha.dashboard.section.header.val["19"] = "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚†Ä‚†Ä‚†Ä‚¢∞‚£ø‚†É‚†Ä‚¢†‚£ø‚°á‚†Ä‚†Ä‚†Ä‚£ø‚°á‚†Ä‚†Ä‚£†‚£¥‚°∂‚†∂‚†∂‚£ø‚£ø‚†Ä‚†Ä‚¢†‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£á‚£ø‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†Å‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†Ä‚£æ‚£ø‚†Ä‚£æ‚£ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä"
lvim.builtin.alpha.dashboard.section.header.val["2"] = "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"
lvim.builtin.alpha.dashboard.section.header.val["20"] = "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚£ø‚°Ä‚†Ä‚¢Ä‚£º‚£ø‚†Ä‚†Ä‚¢∏‚£ø‚†Ä‚†Ä‚†Ä‚¢∞‚£ø‚†á‚†Ä‚¢∞‚£ø‚£á‚†Ä‚†Ä‚£†‚£ø‚°è‚†Ä‚†Ä‚¢∏‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚†Å‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚£†‚£ø‚£ø‚£Ä‚°Ä‚†Ä‚¢†‚£ø‚°ü‚¢†‚£ø‚°ü‚¢Ä‚£ø‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"
lvim.builtin.alpha.dashboard.section.header.val["21"] = "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†Å‚†Ä‚†à‚†õ‚†ø‚†ü‚†ã‚†õ‚†É‚†Ä‚†Ä‚†õ‚†õ‚†Ä‚†Ä‚†Ä‚†ò‚†õ‚†Ä‚†Ä‚†Ä‚†ô‚†ø‚†ø‚†õ‚†ô‚†õ‚†É‚†Ä‚†Ä‚†ö‚†õ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚†ø‚†ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†ø‚†ø‚†ø‚†ø‚†ø‚†ø‚†ø‚†Ä‚†∏‚†ø‚†á‚†∏‚†ø‚†á‚†∏‚†ø‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"
lvim.builtin.alpha.dashboard.section.header.val["22"] = "                                                                                "
lvim.builtin.alpha.dashboard.section.header.val["3"] = "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£§‚£§‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£¶‚£§‚£Ñ‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"
lvim.builtin.alpha.dashboard.section.header.val["4"] = "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£¥‚£æ‚£ø‚†ø‚†õ‚†õ‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†ô‚†õ‚†ª‚¢ø‚£ø‚£∂‚£§‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"
lvim.builtin.alpha.dashboard.section.header.val["5"] = "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£ø‚†ø‚†õ‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ª‚¢ø‚£∑‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"
lvim.builtin.alpha.dashboard.section.header.val["6"] = "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£ø‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢ø‚£ø‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"
lvim.builtin.alpha.dashboard.section.header.val["7"] = "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°†‚†í‚†à‚†â‚†â‚†â‚†â‚†â‚£π‚£ø‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢ø‚£∑‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"
lvim.builtin.alpha.dashboard.section.header.val["8"] = "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚£ø‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ø‚£ø‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"
lvim.builtin.alpha.dashboard.section.header.val["9"] = "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ë‚¢Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£ø‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ø‚£ø‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"
lvim.builtin.alpha.mode = "dashboard"
lvim.builtin.alpha.startify.section.bottom_buttons.entries["1"]["1"] = "q"
lvim.builtin.alpha.startify.section.bottom_buttons.entries["1"]["2"] = "Quit"
lvim.builtin.alpha.startify.section.bottom_buttons.entries["1"]["3"] = "<CMD>quit<CR>"
lvim.builtin.alpha.startify.section.footer.type = "group"
lvim.builtin.alpha.startify.section.header.opts.hl = "Label"
lvim.builtin.alpha.startify.section.header.opts.shrink_margin = false
lvim.builtin.alpha.startify.section.header.type = "text"
lvim.builtin.alpha.startify.section.header.val["1"] = "    __                          _    ___         "
lvim.builtin.alpha.startify.section.header.val["2"] = "   / /   __  ______  ____ _____| |  / (_)___ ___ "
lvim.builtin.alpha.startify.section.header.val["3"] = "  / /   / / / / __ \\/ __ `/ ___/ | / / / __ `__ \\"
lvim.builtin.alpha.startify.section.header.val["4"] = " / /___/ /_/ / / / / /_/ / /   | |/ / / / / / / /"
lvim.builtin.alpha.startify.section.header.val["5"] = "/_____/\\__,_/_/ /_/\\__,_/_/    |___/_/_/ /_/ /_/ "
lvim.builtin.alpha.startify.section.top_buttons.entries["1"]["1"] = "e"
lvim.builtin.alpha.startify.section.top_buttons.entries["1"]["2"] = "Ôúì  New File"
lvim.builtin.alpha.startify.section.top_buttons.entries["1"]["3"] = "<CMD>ene!<CR>"
lvim.builtin.autopairs.active = true
lvim.builtin.autopairs.check_ts = true
lvim.builtin.autopairs.disable_filetype["1"] = "TelescopePrompt"
lvim.builtin.autopairs.disable_filetype["2"] = "spectre_panel"
lvim.builtin.autopairs.disable_in_macro = false
lvim.builtin.autopairs.disable_in_visualblock = false
lvim.builtin.autopairs.enable_afterquote = true
lvim.builtin.autopairs.enable_check_bracket_line = false
lvim.builtin.autopairs.enable_moveright = true
lvim.builtin.autopairs.fast_wrap.chars["1"] = "{"
lvim.builtin.autopairs.fast_wrap.chars["2"] = "["
lvim.builtin.autopairs.fast_wrap.chars["3"] = "("
lvim.builtin.autopairs.fast_wrap.chars["4"] = "\""
lvim.builtin.autopairs.fast_wrap.chars["5"] = "'"
lvim.builtin.autopairs.fast_wrap.check_comma = true
lvim.builtin.autopairs.fast_wrap.end_key = "$"
lvim.builtin.autopairs.fast_wrap.highlight_grey = "Comment"
lvim.builtin.autopairs.fast_wrap.highlight = "Search"
lvim.builtin.autopairs.fast_wrap.keys = "qwertyuiopzxcvbnmasdfghjkl"
lvim.builtin.autopairs.fast_wrap.map = "<M-e>"
lvim.builtin.autopairs.fast_wrap.offset = 0
lvim.builtin.autopairs.fast_wrap.pattern = "[%'%\"%)%>%]%)%}%,]"
lvim.builtin.autopairs.ignored_next_char = "[%w%%%'%[%\"%.]"
lvim.builtin.autopairs.map_bs = true
lvim.builtin.autopairs.map_char.all = "("
lvim.builtin.autopairs.map_char.tex = "{"
lvim.builtin.autopairs.map_c_w = false
lvim.builtin.autopairs.ts_config.java = false
lvim.builtin.autopairs.ts_config.javascript["1"] = "string"
lvim.builtin.autopairs.ts_config.javascript["2"] = "template_string"
lvim.builtin.autopairs.ts_config.lua["1"] = "string"
lvim.builtin.autopairs.ts_config.lua["2"] = "source"
lvim.builtin.bufferline.active = true
lvim.builtin.bufferline.highlights.background.gui = "italic"
lvim.builtin.bufferline.highlights.buffer_selected.gui = "bold"
lvim.builtin.bufferline.options.always_show_bufferline = false
lvim.builtin.bufferline.options.buffer_close_icon = "Ôôï"
lvim.builtin.bufferline.options.close_command = "bdelete! %d"
lvim.builtin.bufferline.options.close_icon = "ÔÄç"
-- lvim.builtin.bufferline.options.custom_filter = function ()
-- lvim.builtin.bufferline.options.diagnostics_indicator = function ()
lvim.builtin.bufferline.options.diagnostics = "nvim_lsp"
lvim.builtin.bufferline.options.diagnostics_update_in_insert = false
lvim.builtin.bufferline.options.enforce_regular_tabs = false
lvim.builtin.bufferline.options.indicator_icon = "‚ñé"
lvim.builtin.bufferline.options.left_mouse_command = "buffer %d"
lvim.builtin.bufferline.options.left_trunc_marker = "ÔÇ®"
lvim.builtin.bufferline.options.max_name_length = 18
lvim.builtin.bufferline.options.max_prefix_length = 15
lvim.builtin.bufferline.options.modified_icon = "‚óè"
-- lvim.builtin.bufferline.options.name_formatter = function ()
lvim.builtin.bufferline.options.numbers = "none"
lvim.builtin.bufferline.options.offsets["1"].filetype = "undotree"
lvim.builtin.bufferline.options.offsets["1"].highlight = "PanelHeading"
lvim.builtin.bufferline.options.offsets["1"].padding = 1
lvim.builtin.bufferline.options.offsets["1"].text = "Undotree"
lvim.builtin.bufferline.options.offsets["2"].filetype = "NvimTree"
lvim.builtin.bufferline.options.offsets["2"].highlight = "PanelHeading"
lvim.builtin.bufferline.options.offsets["2"].padding = 1
lvim.builtin.bufferline.options.offsets["2"].text = "Explorer"
lvim.builtin.bufferline.options.offsets["3"].filetype = "DiffviewFiles"
lvim.builtin.bufferline.options.offsets["3"].highlight = "PanelHeading"
lvim.builtin.bufferline.options.offsets["3"].padding = 1
lvim.builtin.bufferline.options.offsets["3"].text = "Diff View"
lvim.builtin.bufferline.options.offsets["4"].filetype = "flutterToolsOutline"
lvim.builtin.bufferline.options.offsets["4"].highlight = "PanelHeading"
lvim.builtin.bufferline.options.offsets["4"].text = "Flutter Outline"
lvim.builtin.bufferline.options.offsets["5"].filetype = "packer"
lvim.builtin.bufferline.options.offsets["5"].highlight = "PanelHeading"
lvim.builtin.bufferline.options.offsets["5"].padding = 1
lvim.builtin.bufferline.options.offsets["5"].text = "Packer"
lvim.builtin.bufferline.options.persist_buffer_sort = true
lvim.builtin.bufferline.options.right_mouse_command = "vert sbuffer %d"
lvim.builtin.bufferline.options.right_trunc_marker = "ÔÇ©"
lvim.builtin.bufferline.options.separator_style = "thin"
lvim.builtin.bufferline.options.show_buffer_close_icons = true
lvim.builtin.bufferline.options.show_buffer_icons = true
lvim.builtin.bufferline.options.show_close_icon = false
lvim.builtin.bufferline.options.show_tab_indicators = true
lvim.builtin.bufferline.options.sort_by = "id"
lvim.builtin.bufferline.options.tab_size = 18
lvim.builtin.cmp.completion.keyword_length = 1
lvim.builtin.cmp.confirm_opts.behavior = "replace"
lvim.builtin.cmp.confirm_opts.select = false
lvim.builtin.cmp.documentation.border["1"] = "‚ï≠"
lvim.builtin.cmp.documentation.border["2"] = "‚îÄ"
lvim.builtin.cmp.documentation.border["3"] = "‚ïÆ"
lvim.builtin.cmp.documentation.border["4"] = "‚îÇ"
lvim.builtin.cmp.documentation.border["5"] = "‚ïØ"
lvim.builtin.cmp.documentation.border["6"] = "‚îÄ"
lvim.builtin.cmp.documentation.border["7"] = "‚ï∞"
lvim.builtin.cmp.documentation.border["8"] = "‚îÇ"
lvim.builtin.cmp.experimental.ghost_text = true
lvim.builtin.cmp.experimental.native_menu = false
lvim.builtin.cmp.formatting.duplicates.buffer = 1
lvim.builtin.cmp.formatting.duplicates_default = 0
lvim.builtin.cmp.formatting.duplicates.luasnip = 1
lvim.builtin.cmp.formatting.duplicates.nvim_lsp = 0
lvim.builtin.cmp.formatting.duplicates.path = 1
lvim.builtin.cmp.formatting.fields["1"] = "kind"
lvim.builtin.cmp.formatting.fields["2"] = "abbr"
lvim.builtin.cmp.formatting.fields["3"] = "menu"
-- lvim.builtin.cmp.formatting.format = function ()
lvim.builtin.cmp.formatting.kind_icons.Class = "Ô†ñ "
lvim.builtin.cmp.formatting.kind_icons.Color = "Óà´ "
lvim.builtin.cmp.formatting.kind_icons.Constant = "Ô≤Ä "
lvim.builtin.cmp.formatting.kind_icons.Constructor = "Ôê• "
lvim.builtin.cmp.formatting.kind_icons.EnumMember = "ÔÖù "
lvim.builtin.cmp.formatting.kind_icons.Enum = "Ô©ó"
lvim.builtin.cmp.formatting.kind_icons.Event = "ÔÉß "
lvim.builtin.cmp.formatting.kind_icons.Field = "Óúñ "
lvim.builtin.cmp.formatting.kind_icons.File = "Ôúò"
lvim.builtin.cmp.formatting.kind_icons.Folder = "Ôùä "
lvim.builtin.cmp.formatting.kind_icons.Function = "Ôûî "
lvim.builtin.cmp.formatting.kind_icons.Interface = "Ô∞Æ "
lvim.builtin.cmp.formatting.kind_icons.Keyword = "Ô†ä "
lvim.builtin.cmp.formatting.kind_icons.Method = "ÓÉå "
lvim.builtin.cmp.formatting.kind_icons.Module = "Ôô® "
lvim.builtin.cmp.formatting.kind_icons.Operator = "Ôöî"
lvim.builtin.cmp.formatting.kind_icons.Property = "Óò§ "
lvim.builtin.cmp.formatting.kind_icons.Reference = "Ôúú "
lvim.builtin.cmp.formatting.kind_icons.Snippet = "ÔÉÑ "
lvim.builtin.cmp.formatting.kind_icons.Struct = "ÔÉä "
lvim.builtin.cmp.formatting.kind_icons.Text = "Ôùæ "
lvim.builtin.cmp.formatting.kind_icons.TypeParameter = "ÔûÉ "
lvim.builtin.cmp.formatting.kind_icons.Unit = "Ô•¨"
lvim.builtin.cmp.formatting.kind_icons.Value = "Ô¢ü "
lvim.builtin.cmp.formatting.kind_icons.Variable = "Ôö¶ "
lvim.builtin.cmp.formatting.source_names.buffer = "(Buffer)"
lvim.builtin.cmp.formatting.source_names.calc = "(Calc)"
lvim.builtin.cmp.formatting.source_names.cmp_tabnine = "(Tabnine)"
lvim.builtin.cmp.formatting.source_names.emoji = "(Emoji)"
lvim.builtin.cmp.formatting.source_names.luasnip = "(Snippet)"
lvim.builtin.cmp.formatting.source_names.nvim_lsp = "(LSP)"
lvim.builtin.cmp.formatting.source_names.path = "(Path)"
lvim.builtin.cmp.formatting.source_names.vsnip = "(Snippet)"
-- lvim.builtin.cmp.mapping["<C-D>"].i = function ()
-- lvim.builtin.cmp.mapping["<C-E>"].i = function ()
-- lvim.builtin.cmp.mapping["<C-F>"].i = function ()
-- lvim.builtin.cmp.mapping["<C-K>"].c = function ()
-- lvim.builtin.cmp.mapping["<C-K>"].i = function ()
-- lvim.builtin.cmp.mapping["<CR>"].i = function ()
-- lvim.builtin.cmp.mapping["<C-Space>"].i = function ()
-- lvim.builtin.cmp.mapping["<NL>"].c = function ()
-- lvim.builtin.cmp.mapping["<NL>"].i = function ()
-- lvim.builtin.cmp.mapping["<S-Tab>"].i = function ()
-- lvim.builtin.cmp.mapping["<S-Tab>"].s = function ()
-- lvim.builtin.cmp.mapping["<Tab>"].i = function ()
-- lvim.builtin.cmp.mapping["<Tab>"].s = function ()
-- lvim.builtin.cmp.snippet.expand = function ()
lvim.builtin.cmp.sources["10"].name = "treesitter"
lvim.builtin.cmp.sources["11"].name = "crates"
lvim.builtin.cmp.sources["1"].name = "nvim_lsp"
lvim.builtin.cmp.sources["2"].name = "path"
lvim.builtin.cmp.sources["3"].name = "luasnip"
lvim.builtin.cmp.sources["4"].name = "copilot"
lvim.builtin.cmp.sources["5"].name = "cmp_tabnine"
lvim.builtin.cmp.sources["6"].name = "nvim_lua"
lvim.builtin.cmp.sources["7"].name = "buffer"
lvim.builtin.cmp.sources["8"].name = "calc"
lvim.builtin.cmp.sources["9"].name = "emoji"
lvim.builtin.comment.active = true
lvim.builtin.comment.ignore = "^$"
lvim.builtin.comment.mappings.basic = true
lvim.builtin.comment.mappings.extra = false
lvim.builtin.comment.opleader.block = "gb"
lvim.builtin.comment.opleader.line = "gc"
lvim.builtin.comment.padding = true
-- lvim.builtin.comment.pre_hook = function ()
lvim.builtin.comment.toggler.block = "gbc"
lvim.builtin.comment.toggler.line = "gcc"
lvim.builtin.dap.active = true
lvim.builtin.dap.breakpoint.linehl = ""
lvim.builtin.dap.breakpoint.numhl = ""
lvim.builtin.dap.breakpoint_rejected.linehl = ""
lvim.builtin.dap.breakpoint_rejected.numhl = ""
lvim.builtin.dap.breakpoint_rejected.text = "Ôó£"
lvim.builtin.dap.breakpoint_rejected.texthl = "LspDiagnosticsSignHint"
lvim.builtin.dap.breakpoint.text = "Ôó£"
lvim.builtin.dap.breakpoint.texthl = "LspDiagnosticsSignError"
lvim.builtin.dap.stopped.linehl = "DiagnosticUnderlineInfo"
lvim.builtin.dap.stopped.numhl = "LspDiagnosticsSignInformation"
lvim.builtin.dap.stopped.text = "ÔÅ°"
lvim.builtin.dap.stopped.texthl = "LspDiagnosticsSignInformation"
lvim.builtin.dashboard.active = false
lvim.builtin.dashboard.disable_at_vim_enter = 0
lvim.builtin.dashboard.search_handler = ""
lvim.builtin.dashboard.session_directory = ""
lvim.builtin.gitsigns.active = true
lvim.builtin.gitsigns.opts.attach_to_untracked = true
lvim.builtin.gitsigns.opts.current_line_blame = false
lvim.builtin.gitsigns.opts.current_line_blame_formatter_opts.relative_time = false
lvim.builtin.gitsigns.opts.current_line_blame_opts.delay = 1000
lvim.builtin.gitsigns.opts.current_line_blame_opts.ignore_whitespace = false
lvim.builtin.gitsigns.opts.current_line_blame_opts.virt_text_pos = "eol"
lvim.builtin.gitsigns.opts.current_line_blame_opts.virt_text = true
lvim.builtin.gitsigns.opts.keymaps.buffer = true
lvim.builtin.gitsigns.opts.keymaps.noremap = true
lvim.builtin.gitsigns.opts.keymaps["x ih"] = ":<C-U>lua require\"gitsigns.actions\".select_hunk()<CR>"
lvim.builtin.gitsigns.opts.linehl = false
lvim.builtin.gitsigns.opts.max_file_length = 40000
lvim.builtin.gitsigns.opts.numhl = true
lvim.builtin.gitsigns.opts.preview_config.border = "rounded"
lvim.builtin.gitsigns.opts.preview_config.col = 1
lvim.builtin.gitsigns.opts.preview_config.relative = "cursor"
lvim.builtin.gitsigns.opts.preview_config.row = 0
lvim.builtin.gitsigns.opts.preview_config.style = "minimal"
lvim.builtin.gitsigns.opts.signcolumn = true
lvim.builtin.gitsigns.opts.sign_priority = 6
lvim.builtin.gitsigns.opts.signs.add.hl = "GitSignsAdd"
lvim.builtin.gitsigns.opts.signs.add.linehl = "GitSignsAddLn"
lvim.builtin.gitsigns.opts.signs.add.numhl = "GitSignsAddNr"
lvim.builtin.gitsigns.opts.signs.add.text = "‚ñé"
lvim.builtin.gitsigns.opts.signs.changedelete.hl = "GitSignsChange"
lvim.builtin.gitsigns.opts.signs.changedelete.linehl = "GitSignsChangeLn"
lvim.builtin.gitsigns.opts.signs.changedelete.numhl = "GitSignsChangeNr"
lvim.builtin.gitsigns.opts.signs.changedelete.text = "‚ñé"
lvim.builtin.gitsigns.opts.signs.change.hl = "GitSignsChange"
lvim.builtin.gitsigns.opts.signs.change.linehl = "GitSignsChangeLn"
lvim.builtin.gitsigns.opts.signs.change.numhl = "GitSignsChangeNr"
lvim.builtin.gitsigns.opts.signs.change.text = "‚ñé"
lvim.builtin.gitsigns.opts.signs.delete.hl = "GitSignsDelete"
lvim.builtin.gitsigns.opts.signs.delete.linehl = "GitSignsDeleteLn"
lvim.builtin.gitsigns.opts.signs.delete.numhl = "GitSignsDeleteNr"
lvim.builtin.gitsigns.opts.signs.delete.text = "Ô§â"
lvim.builtin.gitsigns.opts.signs.topdelete.hl = "GitSignsDelete"
lvim.builtin.gitsigns.opts.signs.topdelete.linehl = "GitSignsDeleteLn"
lvim.builtin.gitsigns.opts.signs.topdelete.numhl = "GitSignsDeleteNr"
lvim.builtin.gitsigns.opts.signs.topdelete.text = "Ô§â"
lvim.builtin.gitsigns.opts.update_debounce = 200
lvim.builtin.gitsigns.opts.watch_gitdir.follow_files = true
lvim.builtin.gitsigns.opts.watch_gitdir.interval = 1000
lvim.builtin.gitsigns.opts.word_diff = false
lvim.builtin.lualine.active = true
lvim.builtin.lualine.options.globalstatus = false
lvim.builtin.lualine.options.theme = "onedarker"
lvim.builtin.lualine.style = "lvim"
lvim.builtin.notify.active = true
lvim.builtin.notify.opts.background_colour = "Normal"
lvim.builtin.notify.opts.icons.DEBUG = "ÔÜà"
lvim.builtin.notify.opts.icons.ERROR = "Ôôô"
lvim.builtin.notify.opts.icons.INFO = "Ô†µ"
lvim.builtin.notify.opts.icons.TRACE = "‚úé"
lvim.builtin.notify.opts.icons.WARN = "Ôî©"
lvim.builtin.notify.opts.minimum_width = 50
lvim.builtin.notify.opts.render = "default"
lvim.builtin.notify.opts.stages = "slide"
lvim.builtin.notify.opts.timeout = 5000
lvim.builtin.nvimtree.active = true
lvim.builtin.nvimtree.git_hl = 1
lvim.builtin.nvimtree.icons.default = "Óòí"
lvim.builtin.nvimtree.icons.folder.default = "Óóø"
lvim.builtin.nvimtree.icons.folder.empty = "ÔÑî"
lvim.builtin.nvimtree.icons.folder.empty_open = "ÔÑï"
lvim.builtin.nvimtree.icons.folder.open = "Óóæ"
lvim.builtin.nvimtree.icons.folder.symlink = "ÔíÇ"
lvim.builtin.nvimtree.icons.git.deleted = "Ôëò"
lvim.builtin.nvimtree.icons.git.ignored = "‚óå"
lvim.builtin.nvimtree.icons.git.renamed = "‚ûú"
lvim.builtin.nvimtree.icons.git.staged = "S"
lvim.builtin.nvimtree.icons.git.unmerged = "Óúß"
lvim.builtin.nvimtree.icons.git.unstaged = "ÔëÑ"
lvim.builtin.nvimtree.icons.git.untracked = "U"
lvim.builtin.nvimtree.icons.symlink = "ÔíÅ"
lvim.builtin.nvimtree.respect_buf_cwd = 1
lvim.builtin.nvimtree.root_folder_modifier = ":t"
lvim.builtin.nvimtree.setup.actions.change_dir.global = false
lvim.builtin.nvimtree.setup.actions.open_file.quit_on_open = false
lvim.builtin.nvimtree.setup.actions.open_file.resize_window = true
lvim.builtin.nvimtree.setup.actions.window_picker.chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
lvim.builtin.nvimtree.setup.actions.window_picker.enable = false
lvim.builtin.nvimtree.setup.auto_close = false
lvim.builtin.nvimtree.setup.auto_reload_on_write = true
lvim.builtin.nvimtree.setup.diagnostics.enable = true
lvim.builtin.nvimtree.setup.diagnostics.icons.error = "ÔÅó"
lvim.builtin.nvimtree.setup.diagnostics.icons.hint = "ÔÅ™"
lvim.builtin.nvimtree.setup.diagnostics.icons.info = "ÔÅö"
lvim.builtin.nvimtree.setup.diagnostics.icons.warning = "ÔÅ±"
lvim.builtin.nvimtree.setup.disable_netrw = true
lvim.builtin.nvimtree.setup.filters.custom["1"] = "node_modules"
lvim.builtin.nvimtree.setup.filters.custom["2"] = ".cache"
lvim.builtin.nvimtree.setup.filters.dotfiles = false
lvim.builtin.nvimtree.setup.git.enable = true
lvim.builtin.nvimtree.setup.git.ignore = false
lvim.builtin.nvimtree.setup.git.timeout = 200
lvim.builtin.nvimtree.setup.hijack_cursor = false
lvim.builtin.nvimtree.setup.hijack_directories.auto_open = true
lvim.builtin.nvimtree.setup.hijack_directories.enable = true
lvim.builtin.nvimtree.setup.hijack_netrw = true
lvim.builtin.nvimtree.setup.hijack_unnamed_buffer_when_opening = false
lvim.builtin.nvimtree.setup.ignore_buffer_on_setup = false
lvim.builtin.nvimtree.setup.ignore_ft_on_setup["1"] = "startify"
lvim.builtin.nvimtree.setup.ignore_ft_on_setup["2"] = "dashboard"
lvim.builtin.nvimtree.setup.ignore_ft_on_setup["3"] = "alpha"
lvim.builtin.nvimtree.setup.open_on_setup = false
lvim.builtin.nvimtree.setup.open_on_tab = false
lvim.builtin.nvimtree.setup.trash.cmd = "trash"
lvim.builtin.nvimtree.setup.trash.require_confirm = true
lvim.builtin.nvimtree.setup.update_cwd = true
lvim.builtin.nvimtree.setup.update_focused_file.enable = true
lvim.builtin.nvimtree.setup.update_focused_file.update_cwd = true
lvim.builtin.nvimtree.setup.view.auto_resize = false
lvim.builtin.nvimtree.setup.view.height = 30
lvim.builtin.nvimtree.setup.view.hide_root_folder = false
lvim.builtin.nvimtree.setup.view.mappings.custom_only = false
lvim.builtin.nvimtree.setup.view.mappings.list["1"].action = "edit"
lvim.builtin.nvimtree.setup.view.mappings.list["1"].key["1"] = "l"
lvim.builtin.nvimtree.setup.view.mappings.list["1"].key["2"] = "<CR>"
lvim.builtin.nvimtree.setup.view.mappings.list["1"].key["3"] = "o"
lvim.builtin.nvimtree.setup.view.mappings.list["1"].mode = "n"
lvim.builtin.nvimtree.setup.view.mappings.list["2"].action = "close_node"
lvim.builtin.nvimtree.setup.view.mappings.list["2"].key = "h"
lvim.builtin.nvimtree.setup.view.mappings.list["3"].action = "vsplit"
lvim.builtin.nvimtree.setup.view.mappings.list["3"].key = "v"
lvim.builtin.nvimtree.setup.view.mappings.list["4"].action = "cd"
lvim.builtin.nvimtree.setup.view.mappings.list["4"].key = "C"
-- lvim.builtin.nvimtree.setup.view.mappings.list["5"].action_cb = function ()
lvim.builtin.nvimtree.setup.view.mappings.list["5"].action = "telescope_find_files"
lvim.builtin.nvimtree.setup.view.mappings.list["5"].key = "gtf"
-- lvim.builtin.nvimtree.setup.view.mappings.list["6"].action_cb = function ()
lvim.builtin.nvimtree.setup.view.mappings.list["6"].action = "telescope_live_grep"
lvim.builtin.nvimtree.setup.view.mappings.list["6"].key = "gtg"
lvim.builtin.nvimtree.setup.view.number = false
lvim.builtin.nvimtree.setup.view.relativenumber = false
lvim.builtin.nvimtree.setup.view.side = "left"
lvim.builtin.nvimtree.setup.view.signcolumn = "yes"
lvim.builtin.nvimtree.setup.view.width = 30
lvim.builtin.nvimtree.show_icons.files = 1
lvim.builtin.nvimtree.show_icons.folder_arrows = 1
lvim.builtin.nvimtree.show_icons.folders = 1
lvim.builtin.nvimtree.show_icons.git = 1
lvim.builtin.project.active = true
lvim.builtin.project.datapath = "/home/xavier/.cache/nvim"
lvim.builtin.project.detection_methods["1"] = "pattern"
lvim.builtin.project.manual_mode = false
lvim.builtin.project.patterns["1"] = ".git"
lvim.builtin.project.patterns["2"] = "_darcs"
lvim.builtin.project.patterns["3"] = ".hg"
lvim.builtin.project.patterns["4"] = ".bzr"
lvim.builtin.project.patterns["5"] = ".svn"
lvim.builtin.project.patterns["6"] = "Makefile"
lvim.builtin.project.patterns["7"] = "package.json"
lvim.builtin.project.show_hidden = false
lvim.builtin.project.silent_chdir = true
lvim.builtin.telescope.active = true
lvim.builtin.telescope.defaults.borderchars["1"] = "‚îÄ"
lvim.builtin.telescope.defaults.borderchars["2"] = "‚îÇ"
lvim.builtin.telescope.defaults.borderchars["3"] = "‚îÄ"
lvim.builtin.telescope.defaults.borderchars["4"] = "‚îÇ"
lvim.builtin.telescope.defaults.borderchars["5"] = "‚ï≠"
lvim.builtin.telescope.defaults.borderchars["6"] = "‚ïÆ"
lvim.builtin.telescope.defaults.borderchars["7"] = "‚ïØ"
lvim.builtin.telescope.defaults.borderchars["8"] = "‚ï∞"
lvim.builtin.telescope.defaults.color_devicons = true
lvim.builtin.telescope.defaults.dynamic_preview_title = true
lvim.builtin.telescope.defaults.entry_prefix = "  "
lvim.builtin.telescope.defaults.file_ignore_patterns["1"] = "node_modules"
lvim.builtin.telescope.defaults.file_ignore_patterns["2"] = ".git[/\\]"
lvim.builtin.telescope.defaults.initial_mode = "insert"
lvim.builtin.telescope.defaults.layout_config.horizontal.mirror = false
lvim.builtin.telescope.defaults.layout_config.horizontal.preview_width = 0.6
lvim.builtin.telescope.defaults.layout_config.preview_cutoff = 120
lvim.builtin.telescope.defaults.layout_config.vertical.mirror = false
lvim.builtin.telescope.defaults.layout_config.width = 0.8
lvim.builtin.telescope.defaults.layout_strategy = "horizontal"
lvim.builtin.telescope.defaults.mappings.i["<C-c>"]["1"] = "close"
-- lvim.builtin.telescope.defaults.mappings.i["<c-g>"] = function ()
lvim.builtin.telescope.defaults.mappings.i["<C-j>"]["1"] = "move_selection_next"
lvim.builtin.telescope.defaults.mappings.i["<C-k>"]["1"] = "move_selection_previous"
lvim.builtin.telescope.defaults.mappings.i["<C-n>"]["1"] = "cycle_history_next"
lvim.builtin.telescope.defaults.mappings.i["<C-p>"]["1"] = "cycle_history_prev"
lvim.builtin.telescope.defaults.mappings.i["<C-q>"]["1"] = "smart_send_to_qflist"
lvim.builtin.telescope.defaults.mappings.i["<C-q>"]["2"] = "open_qflist"
lvim.builtin.telescope.defaults.mappings.i["<CR>"]["1"] = "select_default"
lvim.builtin.telescope.defaults.mappings.i["<C-r>"]["1"] = "smart_send_to_loclist"
lvim.builtin.telescope.defaults.mappings.i["<CR>"]["2"] = "center"
lvim.builtin.telescope.defaults.mappings.i["<C-r>"]["2"] = "open_loclist"
lvim.builtin.telescope.defaults.mappings.n["<C-_>"]["1"] = "which_key"
-- lvim.builtin.telescope.defaults.mappings.n["<c-g>"] = function ()
lvim.builtin.telescope.defaults.mappings.n["<C-n>"]["1"] = "cycle_history_next"
lvim.builtin.telescope.defaults.mappings.n["<C-p>"]["1"] = "cycle_history_prev"
lvim.builtin.telescope.defaults.mappings.n["<C-q>"]["1"] = "smart_send_to_qflist"
lvim.builtin.telescope.defaults.mappings.n["<C-q>"]["2"] = "open_qflist"
lvim.builtin.telescope.defaults.mappings.n["<C-r>"]["1"] = "smart_send_to_loclist"
lvim.builtin.telescope.defaults.mappings.n["<C-r>"]["2"] = "open_loclist"
lvim.builtin.telescope.defaults.path_display.shorten = 5
lvim.builtin.telescope.defaults.path_display.truncate = 5
lvim.builtin.telescope.defaults.pickers.find_files.find_command["1"] = "fd"
lvim.builtin.telescope.defaults.pickers.find_files.find_command["2"] = "--type=file"
lvim.builtin.telescope.defaults.pickers.find_files.find_command["3"] = "--hidden"
lvim.builtin.telescope.defaults.pickers.find_files.find_command["4"] = "--smart-case"
lvim.builtin.telescope.defaults.pickers.live_grep.only_sort_text = true
lvim.builtin.telescope.defaults.prompt_prefix = "Ôë´ "
lvim.builtin.telescope.defaults.selection_caret = "ÔÅ§ "
lvim.builtin.telescope.defaults.selection_strategy = "reset"
lvim.builtin.telescope.defaults.set_env.COLORTERM = "truecolor"
lvim.builtin.telescope.defaults.sorting_strategy = "descending"
lvim.builtin.telescope.defaults.vimgrep_arguments["1"] = "rg"
lvim.builtin.telescope.defaults.vimgrep_arguments["2"] = "--color=never"
lvim.builtin.telescope.defaults.vimgrep_arguments["3"] = "--no-heading"
lvim.builtin.telescope.defaults.vimgrep_arguments["4"] = "--with-filename"
lvim.builtin.telescope.defaults.vimgrep_arguments["5"] = "--line-number"
lvim.builtin.telescope.defaults.vimgrep_arguments["6"] = "--column"
lvim.builtin.telescope.defaults.vimgrep_arguments["7"] = "--smart-case"
lvim.builtin.telescope.defaults.vimgrep_arguments["8"] = "--hidden"
lvim.builtin.telescope.defaults.winblend = 15
lvim.builtin.telescope.extensions.frecency.ignore_patterns["1"] = "*.git/*"
lvim.builtin.telescope.extensions.frecency.ignore_patterns["2"] = "*/tmp/*"
lvim.builtin.telescope.extensions.frecency.show_scores = true
lvim.builtin.telescope.extensions.frecency.show_unindexed = true
lvim.builtin.telescope.extensions.frecency.workspaces.beauty = "/home/xavier/Beauty"
lvim.builtin.telescope.extensions.frecency.workspaces.conf = "/home/xavier/.config"
lvim.builtin.telescope.extensions.frecency.workspaces.dot = "/home/xavier/dotter"
lvim.builtin.telescope.extensions.frecency.workspaces.project = "/home/xavier/projects"
lvim.builtin.telescope.extensions.frecency.workspaces.share = "/home/xavier/.local/share"
lvim.builtin.telescope.extensions.frecency.workspaces.source = "/home/xavier/source"
lvim.builtin.telescope.extensions.frecency.workspaces.wiki = "/home/xavier/wiki"
lvim.builtin.telescope.extensions.fzf.case_mode = "smart_case"
lvim.builtin.telescope.extensions.fzf.fuzzy = true
lvim.builtin.telescope.extensions.fzf.override_file_sorter = true
lvim.builtin.telescope.extensions.fzf.override_generic_sorter = true
-- lvim.builtin.telescope.file_previewer = function ()
-- lvim.builtin.telescope.file_sorter = function ()
-- lvim.builtin.telescope.generic_sorter = function ()
-- lvim.builtin.telescope.grep_previewer = function ()
lvim.builtin.telescope.mappings.i["<C-c>"]["1"] = "close"
lvim.builtin.telescope.mappings.i["<C-j>"]["1"] = "cycle_history_next"
lvim.builtin.telescope.mappings.i["<C-k>"]["1"] = "cycle_history_prev"
lvim.builtin.telescope.mappings.i["<C-n>"]["1"] = "move_selection_next"
lvim.builtin.telescope.mappings.i["<C-p>"]["1"] = "move_selection_previous"
lvim.builtin.telescope.mappings.i["<C-q>"]["1"] = "smart_send_to_qflist"
lvim.builtin.telescope.mappings.i["<C-q>"]["2"] = "open_qflist"
lvim.builtin.telescope.mappings.i["<CR>"]["1"] = "select_default"
lvim.builtin.telescope.mappings.i["<CR>"]["2"] = "center"
lvim.builtin.telescope.mappings.n["<C-n>"]["1"] = "move_selection_next"
lvim.builtin.telescope.mappings.n["<C-p>"]["1"] = "move_selection_previous"
lvim.builtin.telescope.mappings.n["<C-q>"]["1"] = "smart_send_to_qflist"
lvim.builtin.telescope.mappings.n["<C-q>"]["2"] = "open_qflist"
-- lvim.builtin.telescope.on_config_done = function ()
lvim.builtin.telescope.pickers.autocommands.layout_config.height = 0.99
lvim.builtin.telescope.pickers.autocommands.layout_config.preview_cutoff = 30
lvim.builtin.telescope.pickers.autocommands.layout_strategy = "vertical"
lvim.builtin.telescope.pickers.buffers.theme = "ivy"
lvim.builtin.telescope.pickers.colorscheme.layout_config.preview_width = 0.8
lvim.builtin.telescope.pickers.colorscheme.layout_config.prompt_position = "top"
lvim.builtin.telescope.pickers.colorscheme.layout_strategy = "horizontal"
lvim.builtin.telescope.pickers.colorscheme.sorting_strategy = "ascending"
lvim.builtin.telescope.pickers.commands.theme = "ivy"
lvim.builtin.telescope.pickers.current_buffer_fuzzy_find.layout_config.prompt_position = "top"
lvim.builtin.telescope.pickers.current_buffer_fuzzy_find.layout_strategy = "vertical"
lvim.builtin.telescope.pickers.current_buffer_fuzzy_find.sorting_strategy = "ascending"
lvim.builtin.telescope.pickers.file_browser.layout_config.preview_width = 0.5
lvim.builtin.telescope.pickers.file_browser.layout_config.prompt_position = "top"
lvim.builtin.telescope.pickers.file_browser.layout_strategy = "horizontal"
lvim.builtin.telescope.pickers.file_browser.sorting_strategy = "ascending"
lvim.builtin.telescope.pickers.find_files.layout_config.height = 0.99
lvim.builtin.telescope.pickers.find_files.layout_config.preview_cutoff = 30
lvim.builtin.telescope.pickers.find_files.layout_strategy = "vertical"
lvim.builtin.telescope.pickers.git_bcommits.layout_config.preview_width = 0.6
lvim.builtin.telescope.pickers.git_bcommits.layout_config.prompt_position = "top"
lvim.builtin.telescope.pickers.git_bcommits.layout_strategy = "horizontal"
lvim.builtin.telescope.pickers.git_bcommits.sorting_strategy = "ascending"
lvim.builtin.telescope.pickers.git_branches.mappings.i["<C-f>"]["1"] = "preview_scrolling_down"
lvim.builtin.telescope.pickers.git_branches.mappings.n["<C-f>"]["1"] = "preview_scrolling_down"
lvim.builtin.telescope.pickers.git_commits.layout_config.preview_width = 0.6
lvim.builtin.telescope.pickers.git_commits.layout_config.prompt_position = "top"
lvim.builtin.telescope.pickers.git_commits.layout_strategy = "horizontal"
lvim.builtin.telescope.pickers.git_commits.sorting_strategy = "ascending"
lvim.builtin.telescope.pickers.git_files.layout_config.preview_width = 0.6
lvim.builtin.telescope.pickers.git_files.layout_config.prompt_position = "top"
lvim.builtin.telescope.pickers.git_files.layout_strategy = "horizontal"
lvim.builtin.telescope.pickers.git_files.sorting_strategy = "ascending"
lvim.builtin.telescope.pickers.git_status.layout_config.preview_width = 0.6
lvim.builtin.telescope.pickers.git_status.layout_config.prompt_position = "top"
lvim.builtin.telescope.pickers.git_status.layout_strategy = "horizontal"
lvim.builtin.telescope.pickers.git_status.sorting_strategy = "ascending"
lvim.builtin.telescope.pickers.grep_string.theme = "ivy"
lvim.builtin.telescope.pickers.live_grep.layout_config.preview_width = 0.5
lvim.builtin.telescope.pickers.live_grep.layout_strategy = "horizontal"
lvim.builtin.telescope.pickers.lsp_code_actions.theme = "cursor"
lvim.builtin.telescope.pickers.lsp_range_code_actions.theme = "cursor"
lvim.builtin.telescope.pickers.man_pages.layout_config.preview_width = 0.5
lvim.builtin.telescope.pickers.man_pages.layout_strategy = "horizontal"
lvim.builtin.telescope.pickers.marks.layout_config.preview_width = 0.5
lvim.builtin.telescope.pickers.marks.layout_strategy = "horizontal"
lvim.builtin.telescope.pickers.oldfiles.layout_config.height = 0.99
lvim.builtin.telescope.pickers.oldfiles.layout_config.mirror = true
lvim.builtin.telescope.pickers.oldfiles.layout_config.preview_cutoff = 30
lvim.builtin.telescope.pickers.oldfiles.layout_config.preview_height = 0.6
lvim.builtin.telescope.pickers.oldfiles.layout_config.prompt_position = "top"
lvim.builtin.telescope.pickers.oldfiles.layout_strategy = "vertical"
lvim.builtin.telescope.pickers.oldfiles.sorting_strategy = "ascending"
-- lvim.builtin.telescope.qflist_previewer = function ()
lvim.builtin.terminal.active = true
lvim.builtin.terminal.close_on_exit = true
lvim.builtin.terminal.direction = "float"
lvim.builtin.terminal.execs["1"]["1"] = "lazygit"
lvim.builtin.terminal.execs["1"]["2"] = "<leader>gg"
lvim.builtin.terminal.execs["1"]["3"] = "LazyGit"
lvim.builtin.terminal.execs["1"]["4"] = "float"
lvim.builtin.terminal.execs["2"]["1"] = "lazygit"
lvim.builtin.terminal.execs["2"]["2"] = "<c-\\><c-g>"
lvim.builtin.terminal.execs["2"]["3"] = "LazyGit"
lvim.builtin.terminal.execs["2"]["4"] = "float"
lvim.builtin.terminal.float_opts.border = "curved"
lvim.builtin.terminal.float_opts.highlights.background = "Normal"
lvim.builtin.terminal.float_opts.highlights.border = "Normal"
lvim.builtin.terminal.float_opts.winblend = 0
lvim.builtin.terminal.hide_numbers = true
lvim.builtin.terminal.insert_mappings = true
lvim.builtin.terminal.open_mapping = "<c-t>"
lvim.builtin.terminal.persist_size = false
lvim.builtin.terminal.shade_terminals = true
lvim.builtin.terminal.shading_factor = 2
lvim.builtin.terminal.shell = "/bin/zsh"
lvim.builtin.terminal.size = 20
lvim.builtin.terminal.start_in_insert = true
lvim.builtin.treesitter.autopairs.enable = true
lvim.builtin.treesitter.autotag.enable = true
lvim.builtin.treesitter.autotag.filetypes["1"] = "html"
lvim.builtin.treesitter.autotag.filetypes["2"] = "xml"
lvim.builtin.treesitter.context_commentstring.config.css = "/* %s */"
lvim.builtin.treesitter.context_commentstring.config.html = "<!-- %s -->"
lvim.builtin.treesitter.context_commentstring.config.json = ""
lvim.builtin.treesitter.context_commentstring.config.scss = "/* %s */"
lvim.builtin.treesitter.context_commentstring.config.svelte = "<!-- %s -->"
lvim.builtin.treesitter.context_commentstring.config.typescript = "// %s"
lvim.builtin.treesitter.context_commentstring.config.vue = "<!-- %s -->"
lvim.builtin.treesitter.context_commentstring.enable = true
lvim.builtin.treesitter.ensure_installed["1"] = "cpp"
lvim.builtin.treesitter.ensure_installed["2"] = "go"
lvim.builtin.treesitter.ensure_installed["3"] = "java"
lvim.builtin.treesitter.ensure_installed["4"] = "lua"
lvim.builtin.treesitter.ensure_installed["5"] = "python"
lvim.builtin.treesitter.ensure_installed["6"] = "rust"
lvim.builtin.treesitter.ensure_installed["7"] = "vim"
lvim.builtin.treesitter.highlight.additional_vim_regex_highlighting = true
lvim.builtin.treesitter.highlight.disable["1"] = "latex"
lvim.builtin.treesitter.highlight.enable = true
lvim.builtin.treesitter.ignore_install["1"] = "haskell"
lvim.builtin.treesitter.incremental_selection.enable = true
lvim.builtin.treesitter.incremental_selection.keymaps.node_decremental = "[s"
lvim.builtin.treesitter.incremental_selection.keymaps.node_incremental = "]s"
lvim.builtin.treesitter.incremental_selection.keymaps.scope_incremental = "]S"
lvim.builtin.treesitter.indent.disable["1"] = "yaml"
lvim.builtin.treesitter.indent.enable = true
lvim.builtin.treesitter.matchup.enable = true
lvim.builtin.treesitter.playground.enable = true
lvim.builtin.treesitter.playground.keybindings.focus_language = "f"
lvim.builtin.treesitter.playground.keybindings.goto_node = "<cr>"
lvim.builtin.treesitter.playground.keybindings.show_help = "?"
lvim.builtin.treesitter.playground.keybindings.toggle_anonymous_nodes = "a"
lvim.builtin.treesitter.playground.keybindings.toggle_hl_groups = "i"
lvim.builtin.treesitter.playground.keybindings.toggle_injected_languages = "t"
lvim.builtin.treesitter.playground.keybindings.toggle_language_display = "I"
lvim.builtin.treesitter.playground.keybindings.toggle_query_editor = "o"
lvim.builtin.treesitter.playground.keybindings.unfocus_language = "F"
lvim.builtin.treesitter.playground.keybindings.update = "R"
lvim.builtin.treesitter.playground.persist_queries = false
lvim.builtin.treesitter.playground.updatetime = 25
lvim.builtin.treesitter.rainbow.enable = true
lvim.builtin.treesitter.rainbow.extended_mode = true
lvim.builtin.treesitter.rainbow.max_file_lines = 3000
lvim.builtin.treesitter.refactor.highlight_current_scope.enable = false
lvim.builtin.treesitter.refactor.highlight_definitions.enable = false
lvim.builtin.treesitter.refactor.navigation.enable = true
lvim.builtin.treesitter.refactor.navigation.keymaps.goto_definition = "gmd"
lvim.builtin.treesitter.refactor.navigation.keymaps.goto_next_usage = "]v"
lvim.builtin.treesitter.refactor.navigation.keymaps.goto_previous_usage = "[v"
lvim.builtin.treesitter.refactor.navigation.keymaps.list_definitions = "gmD"
lvim.builtin.treesitter.refactor.navigation.keymaps.list_definitions_toc = "gmo"
lvim.builtin.treesitter.refactor.smart_rename.enable = true
lvim.builtin.treesitter.refactor.smart_rename.keymaps.smart_rename = "gmr"
lvim.builtin.treesitter.textobjects.lsp_interop.border = "none"
lvim.builtin.treesitter.textobjects.lsp_interop.enable = true
lvim.builtin.treesitter.textobjects.lsp_interop.peek_definition_code.gmF = "@class.outer"
lvim.builtin.treesitter.textobjects.lsp_interop.peek_definition_code.gmf = "@function.outer"
lvim.builtin.treesitter.textobjects.move.enable = true
lvim.builtin.treesitter.textobjects.move.goto_next_start["]0"] = "@loop.outer"
lvim.builtin.treesitter.textobjects.move.goto_next_start["]1"] = "@block.inner"
lvim.builtin.treesitter.textobjects.move.goto_next_start["]2"] = "@block.outer"
lvim.builtin.treesitter.textobjects.move.goto_next_start["]3"] = "@class.inner"
lvim.builtin.treesitter.textobjects.move.goto_next_start["]4"] = "@class.outer"
lvim.builtin.treesitter.textobjects.move.goto_next_start["]7"] = "@conditional.inner"
lvim.builtin.treesitter.textobjects.move.goto_next_start["]8"] = "@conditional.outer"
lvim.builtin.treesitter.textobjects.move.goto_next_start["]9"] = "@loop.inner"
lvim.builtin.treesitter.textobjects.move.goto_next_start["]-"] = "@call.inner"
lvim.builtin.treesitter.textobjects.move.goto_next_start["]="] = "@call.outer"
lvim.builtin.treesitter.textobjects.move.goto_next_start["]f"] = "@function.outer"
lvim.builtin.treesitter.textobjects.move.goto_next_start["]k"] = "@comment.outer"
lvim.builtin.treesitter.textobjects.move.goto_next_start["]m"] = "@function.inner"
lvim.builtin.treesitter.textobjects.move.goto_next_start["],"] = "@parameter.inner"
lvim.builtin.treesitter.textobjects.move.goto_next_start["]."] = "@parameter.outer"
lvim.builtin.treesitter.textobjects.move.goto_previous_start["[0"] = "@loop.outer"
lvim.builtin.treesitter.textobjects.move.goto_previous_start["[1"] = "@block.inner"
lvim.builtin.treesitter.textobjects.move.goto_previous_start["[2"] = "@block.outer"
lvim.builtin.treesitter.textobjects.move.goto_previous_start["[3"] = "@class.inner"
lvim.builtin.treesitter.textobjects.move.goto_previous_start["[4"] = "@class.outer"
lvim.builtin.treesitter.textobjects.move.goto_previous_start["[7"] = "@conditional.inner"
lvim.builtin.treesitter.textobjects.move.goto_previous_start["[8"] = "@conditional.outer"
lvim.builtin.treesitter.textobjects.move.goto_previous_start["[9"] = "@loop.inner"
lvim.builtin.treesitter.textobjects.move.goto_previous_start["[-"] = "@call.inner"
lvim.builtin.treesitter.textobjects.move.goto_previous_start["[="] = "@call.outer"
lvim.builtin.treesitter.textobjects.move.goto_previous_start["[f"] = "@function.outer"
lvim.builtin.treesitter.textobjects.move.goto_previous_start["[k"] = "@comment.outer"
lvim.builtin.treesitter.textobjects.move.goto_previous_start["[m"] = "@function.inner"
lvim.builtin.treesitter.textobjects.move.goto_previous_start["[,"] = "@parameter.inner"
lvim.builtin.treesitter.textobjects.move.goto_previous_start["[."] = "@parameter.outer"
lvim.builtin.treesitter.textobjects.move.set_jumps = false
lvim.builtin.treesitter.textobjects.select.enable = true
lvim.builtin.treesitter.textobjects.select.keymaps["a1"] = "@block.outer"
lvim.builtin.treesitter.textobjects.select.keymaps["a3"] = "@class.outer"
lvim.builtin.treesitter.textobjects.select.keymaps["a7"] = "@conditional.outer"
lvim.builtin.treesitter.textobjects.select.keymaps["a9"] = "@loop.outer"
lvim.builtin.treesitter.textobjects.select.keymaps["a-"] = "@call.outer"
lvim.builtin.treesitter.textobjects.select.keymaps.af = "@function.outer"
lvim.builtin.treesitter.textobjects.select.keymaps.ak = "@comment.outer"
lvim.builtin.treesitter.textobjects.select.keymaps["a."] = "@parameter.outer"
lvim.builtin.treesitter.textobjects.select.keymaps["i1"] = "@block.inner"
lvim.builtin.treesitter.textobjects.select.keymaps["i3"] = "@class.inner"
lvim.builtin.treesitter.textobjects.select.keymaps["i7"] = "@conditional.inner"
lvim.builtin.treesitter.textobjects.select.keymaps["i9"] = "@loop.inner"
lvim.builtin.treesitter.textobjects.select.keymaps["i-"] = "@call.inner"
lvim.builtin.treesitter.textobjects.select.keymaps.if = "@function.inner"
lvim.builtin.treesitter.textobjects.select.keymaps["i,"] = "@parameter.inner"
lvim.builtin.treesitter.textobjects.select.lookahead = true
lvim.builtin.treesitter.textobjects.swap.enable = true
lvim.builtin.treesitter.textobjects.swap.swap_next[";s"] = "@parameter.inner"
lvim.builtin.treesitter.textobjects.swap.swap_previous[";S"] = "@parameter.inner"
lvim.builtin.treesitter.textsubjects.enable = true
lvim.builtin.treesitter.textsubjects.keymaps["<cr>"] = "textsubjects-smart"
lvim.builtin.treesitter.textsubjects.keymaps[";"] = "textsubjects-big"
lvim.builtin.treesitter.textsubjects.keymaps["+"] = "textsubjects-container-outer"
lvim.builtin.treesitter.textsubjects.keymaps["."] = "textsubjects-smart"
lvim.builtin.treesitter.tree_docs.enable = false
lvim.builtin.which_key.active = true
lvim.builtin.which_key.mappings[";"]["1"] = "<cmd>Alpha<CR>"
lvim.builtin.which_key.mappings["/"]["1"] = "<cmd>lua require('lir.float').toggle()<cr>"
lvim.builtin.which_key.mappings["?"][" "]["1"] = ":h api<CR>"
lvim.builtin.which_key.mappings["?"]["?"]["1"] = ":h reference_toc<CR>"
lvim.builtin.which_key.mappings["?"]["?"]["2"] = "‚ùì"
lvim.builtin.which_key.mappings["?"][" "]["2"] = "Api"
lvim.builtin.which_key.mappings[";"]["2"] = "Dashboard"
lvim.builtin.which_key.mappings["/"]["2"] = "Lir"
lvim.builtin.which_key.mappings["?"].A["1"] = ":h vim-additions<CR>"
lvim.builtin.which_key.mappings["?"].a["1"] = ":h vim-arguments<CR>"
lvim.builtin.which_key.mappings["?"].A["2"] = "Vim Additions"
lvim.builtin.which_key.mappings["?"].a["2"] = "Vim Arguments"
lvim.builtin.which_key.mappings.b.a["1"] = ":TablineToggleShowAllBuffers<cr>"
lvim.builtin.which_key.mappings.b.a["2"] = "Tabline Toggle All"
lvim.builtin.which_key.mappings.b.b["1"] = "<cmd>BufferLineCyclePrev<cr>"
lvim.builtin.which_key.mappings.b.B["1"] = "<cmd>BufferOrderByBufferNumber<cr>"
lvim.builtin.which_key.mappings.b.b["2"] = "Previous"
lvim.builtin.which_key.mappings.b.B["2"] = "Sort by BufferNumber"
lvim.builtin.which_key.mappings.b.D["1"] = "<cmd>BufferLineSortByDirectory<cr>"
lvim.builtin.which_key.mappings.b.d["1"] = ":TablineBuffersBind "
lvim.builtin.which_key.mappings.b.D["2"] = "Sort by directory"
lvim.builtin.which_key.mappings.b.d["2"] = "Tabline Bound"
lvim.builtin.which_key.mappings.b.e["1"] = "<cmd>BufferLinePickClose<cr>"
lvim.builtin.which_key.mappings.b.e["2"] = "Pick which buffer to close"
lvim.builtin.which_key.mappings.b.f["1"] = "<cmd>Telescope buffers<cr>"
lvim.builtin.which_key.mappings.b.f["2"] = "Find"
lvim.builtin.which_key.mappings.b.h["1"] = "<cmd>BufferLineCloseLeft<cr>"
lvim.builtin.which_key.mappings.b.h["2"] = "Close all to the left"
lvim.builtin.which_key.mappings.b.j["1"] = "<cmd>BufferLinePick<cr>"
lvim.builtin.which_key.mappings.b.j["2"] = "Jump"
lvim.builtin.which_key.mappings.b.l["1"] = "<cmd>BufferLast<cr>"
lvim.builtin.which_key.mappings.b.L["1"] = "<cmd>BufferLineSortByExtension<cr>"
lvim.builtin.which_key.mappings.b.l["2"] = "Last"
lvim.builtin.which_key.mappings.b.L["2"] = "Sort by language"
lvim.builtin.which_key.mappings.b.name = "Buffers"
lvim.builtin.which_key.mappings.b.p["1"] = "<cmd>BufferPin<cr>"
lvim.builtin.which_key.mappings.b.p["2"] = "Pin"
lvim.builtin.which_key.mappings.b.r["1"] = ":TablineTabRename "
lvim.builtin.which_key.mappings.b.r["2"] = "Tabline Rename"
lvim.builtin.which_key.mappings.b.T["1"] = ":TablineCustom "
lvim.builtin.which_key.mappings.b.t["1"] = ":TablineTabNew "
lvim.builtin.which_key.mappings.b.T["2"] = "Tabline+"
lvim.builtin.which_key.mappings.b.t["2"] = "Tabline New"
lvim.builtin.which_key.mappings.b.u["1"] = ":TablineBuffersClearBind<cr>"
lvim.builtin.which_key.mappings.b.u["2"] = "Tabline Unbound"
lvim.builtin.which_key.mappings.b.W["1"] = "<cmd>BufferOrderByWindowNumber<cr>"
lvim.builtin.which_key.mappings.b.W["2"] = "Sort by WindowNumber"
lvim.builtin.which_key.mappings.C["1"] = ":call OpenLastClosed()<CR>"
lvim.builtin.which_key.mappings.c["1"] = "<cmd>BufferKill<CR>"
lvim.builtin.which_key.mappings.c["2"] = "Close Buffer"
lvim.builtin.which_key.mappings.C["2"] = "which_key_ignore"
lvim.builtin.which_key.mappings["?"].d["1"] = ":h nvim-defaults<CR>"
lvim.builtin.which_key.mappings["?"].d["2"] = "Defaults"
lvim.builtin.which_key.mappings.d.b["1"] = "<cmd>lua require'dap'.step_back()<cr>"
lvim.builtin.which_key.mappings.d.b["2"] = "Step Back"
lvim.builtin.which_key.mappings.d.c["1"] = "<cmd>lua require'dap'.continue()<cr>"
lvim.builtin.which_key.mappings.d.C["1"] = "<cmd>lua require'dap'.run_to_cursor()<cr>"
lvim.builtin.which_key.mappings.d.c["2"] = "Continue"
lvim.builtin.which_key.mappings.d.C["2"] = "Run To Cursor"
lvim.builtin.which_key.mappings.d.d["1"] = "<cmd>lua require'dap'.disconnect()<cr>"
lvim.builtin.which_key.mappings.d.d["2"] = "Disconnect"
lvim.builtin.which_key.mappings.d.g["1"] = "<cmd>lua require'dap'.session()<cr>"
lvim.builtin.which_key.mappings.d.g["2"] = "Get Session"
lvim.builtin.which_key.mappings.d.i["1"] = "<cmd>lua require'dap'.step_into()<cr>"
lvim.builtin.which_key.mappings.d.i["2"] = "Step Into"
lvim.builtin.which_key.mappings.d.name = "Debug"
lvim.builtin.which_key.mappings.d.o["1"] = "<cmd>lua require'dap'.step_over()<cr>"
lvim.builtin.which_key.mappings.d.o["2"] = "Step Over"
lvim.builtin.which_key.mappings.d.p["1"] = "<cmd>lua require'dap'.pause.toggle()<cr>"
lvim.builtin.which_key.mappings.d.p["2"] = "Pause"
lvim.builtin.which_key.mappings.d.q["1"] = "<cmd>lua require'dap'.close()<cr>"
lvim.builtin.which_key.mappings.d.q["2"] = "Quit"
lvim.builtin.which_key.mappings.d.r["1"] = "<cmd>lua require'dap'.repl.toggle()<cr>"
lvim.builtin.which_key.mappings.d.r["2"] = "Toggle Repl"
lvim.builtin.which_key.mappings.d.s["1"] = "<cmd>lua require'dap'.continue()<cr>"
lvim.builtin.which_key.mappings.d.s["2"] = "Start"
lvim.builtin.which_key.mappings.d.t["1"] = "<cmd>lua require'dap'.toggle_breakpoint()<cr>"
lvim.builtin.which_key.mappings.d.t["2"] = "Toggle Breakpoint"
lvim.builtin.which_key.mappings.d.u["1"] = "<cmd>lua require'dap'.step_out()<cr>"
lvim.builtin.which_key.mappings.d.u["2"] = "Step Out"
lvim.builtin.which_key.mappings.e["1"] = "<cmd>NvimTreeToggle<CR>"
lvim.builtin.which_key.mappings["?"].e["1"] = ":exu<CR>"
lvim.builtin.which_key.mappings["?"].E["1"] = ":h ex-edit-index<CR>"
lvim.builtin.which_key.mappings["?"].e["2"] = "Ex-cmd Index"
lvim.builtin.which_key.mappings["?"].E["2"] = "Ex-edit Index"
lvim.builtin.which_key.mappings.e["2"] = "Explorer"
-- lvim.builtin.which_key.mappings.f["1"] = function ()
lvim.builtin.which_key.mappings["?"].F["1"] = ":h function-list<CR>"
lvim.builtin.which_key.mappings["?"].f["1"] = ":h vim-function<CR>"
lvim.builtin.which_key.mappings.f["2"] = "Find File"
lvim.builtin.which_key.mappings["?"].F["2"] = "Function List"
lvim.builtin.which_key.mappings["?"].f["2"] = "Functions"
lvim.builtin.which_key.mappings.g["""]["1"] = "<cmd>Gitsigns toggle_current_line_blame<cr>"
lvim.builtin.which_key.mappings.g["'"]["1"] = "<cmd>Gitsigns toggle_linehl<cr>"
lvim.builtin.which_key.mappings["?"].g["1"] = ":h g<CR>"
lvim.builtin.which_key.mappings.g["""]["2"] = "Blames"
lvim.builtin.which_key.mappings["?"].g["2"] = "g Index"
lvim.builtin.which_key.mappings.g["'"]["2"] = "Highlight"
lvim.builtin.which_key.mappings.g[" "].a["1"] = "<cmd>Gist -b -a<cr>"
lvim.builtin.which_key.mappings.g.a["1"] = "<cmd>Telescope git_stash<CR>"
lvim.builtin.which_key.mappings.g[" "].a["2"] = "Create Anon"
lvim.builtin.which_key.mappings.g.a["2"] = "Stash"
lvim.builtin.which_key.mappings.g.b["1"] = "<cmd>Telescope git_branches<cr>"
lvim.builtin.which_key.mappings.g.b["2"] = "Checkout branch"
lvim.builtin.which_key.mappings.g.C["1"] = "<cmd>Telescope git_bcommits<cr>"
lvim.builtin.which_key.mappings.g.c["1"] = "<cmd>Telescope git_commits<cr>"
lvim.builtin.which_key.mappings.g.c["2"] = "Checkout commit"
lvim.builtin.which_key.mappings.g.C["2"] = "Checkout commit(for current file)"
lvim.builtin.which_key.mappings.g["<C-e>"].a["1"] = "<cmd>lua require 'gitsigns'.setloclist('all')<cr>"
lvim.builtin.which_key.mappings.g["<C-e>"].a["2"] = "All Git"
lvim.builtin.which_key.mappings.g["<C-e>"].b["1"] = "<cmd>lua require 'gitsigns'.setloclist('attached')<cr>"
lvim.builtin.which_key.mappings.g["<C-e>"].b["2"] = "Buffers"
lvim.builtin.which_key.mappings.g["<C-e>"].c["1"] = "<cmd>Gitsigns setloclist<cr>"
lvim.builtin.which_key.mappings.g["<C-e>"].c["2"] = "Current"
lvim.builtin.which_key.mappings.g["<C-e>"].name = "loclist"
lvim.builtin.which_key.mappings.g["<C-q>"].a["1"] = "<cmd>lua require 'gitsigns'.setqflist('all')<cr>"
lvim.builtin.which_key.mappings.g["<C-q>"].a["2"] = "All Git"
lvim.builtin.which_key.mappings.g["<C-q>"].b["1"] = "<cmd>lua require 'gitsigns'.setqflist('attached')<cr>"
lvim.builtin.which_key.mappings.g["<C-q>"].b["2"] = "Buffers"
lvim.builtin.which_key.mappings.g["<C-q>"].c["1"] = "<cmd>Gitsigns setqflist<cr>"
lvim.builtin.which_key.mappings.g["<C-q>"].c["2"] = "Current"
lvim.builtin.which_key.mappings.g["<C-q>"].name = "quickfix"
lvim.builtin.which_key.mappings.g[" "].d["1"] = "<cmd>Gist -d<cr>"
lvim.builtin.which_key.mappings.g.d["1"] = "<cmd>Gitsigns diffthis HEAD<cr>"
lvim.builtin.which_key.mappings.g[" "].d["2"] = "Delete"
lvim.builtin.which_key.mappings.g.d["2"] = "Git Diff"
lvim.builtin.which_key.mappings.g[" "].f["1"] = "<cmd>Gist -f<cr>"
lvim.builtin.which_key.mappings.g.f["1"] = "<cmd>Telescope git_files<CR>"
lvim.builtin.which_key.mappings.g.f["2"] = "Files"
lvim.builtin.which_key.mappings.g[" "].f["2"] = "Fork"
lvim.builtin.which_key.mappings.g[" "].g["1"] = "<cmd>Gist -b<cr>"
lvim.builtin.which_key.mappings.g[" "].g["2"] = "Create"
lvim.builtin.which_key.mappings.g.h.g["1"] = "<cmd>Telescope gh gist<cr>"
lvim.builtin.which_key.mappings.g.h.g["2"] = "Gist"
lvim.builtin.which_key.mappings.g.h.i["1"] = "<cmd>Telescope gh issues<cr>"
lvim.builtin.which_key.mappings.g.h.i["2"] = "Issues"
lvim.builtin.which_key.mappings.g.h.name = "github"
lvim.builtin.which_key.mappings.g.h.p["1"] = "<cmd>Telescope gh pull_request<cr>"
lvim.builtin.which_key.mappings.g.h.p["2"] = "Pull_request"
lvim.builtin.which_key.mappings.g.h.r["1"] = "<cmd>Telescope gh run<cr>"
lvim.builtin.which_key.mappings.g.h.r["2"] = "Run"
lvim.builtin.which_key.mappings.g.j["1"] = "<cmd>lua require 'gitsigns'.next_hunk()<cr>"
lvim.builtin.which_key.mappings.g.j["2"] = "Next Hunk"
lvim.builtin.which_key.mappings.g.k["1"] = "<cmd>lua require 'gitsigns'.prev_hunk()<cr>"
lvim.builtin.which_key.mappings.g.k["2"] = "Prev Hunk"
lvim.builtin.which_key.mappings.g[" "].l["1"] = "<cmd>Gist -l<cr>"
lvim.builtin.which_key.mappings.g.l["1"] = "<cmd>lua require 'gitsigns'.blame_line()<cr>"
lvim.builtin.which_key.mappings.g.l["2"] = "Blame"
lvim.builtin.which_key.mappings.g[" "].l["2"] = "List"
lvim.builtin.which_key.mappings.g[" "].name = "gist"
lvim.builtin.which_key.mappings.g.name = "Git"
lvim.builtin.which_key.mappings.g.n.c["1"] = "<cmd>lua require('neogit').open({ 'commit' })<cr>"
lvim.builtin.which_key.mappings.g.n.c["2"] = "Commit"
lvim.builtin.which_key.mappings.g.n.n["1"] = "<cmd>Neogit<cr>"
lvim.builtin.which_key.mappings.g.n.n["2"] = "‚ôê"
lvim.builtin.which_key.mappings.g.n.name = "neogit"
lvim.builtin.which_key.mappings.g.n.s["1"] = "<cmd>lua require('neogit').open({ kind = 'split' })<cr>"
lvim.builtin.which_key.mappings.g.n.s["2"] = "Commit"
lvim.builtin.which_key.mappings.g.n.v["1"] = "<cmd>lua require('neogit').open({ kind = 'vsplit' })<cr>"
lvim.builtin.which_key.mappings.g.n.v["2"] = "Commit"
lvim.builtin.which_key.mappings.g.o["1"] = "<cmd>Telescope git_status<cr>"
lvim.builtin.which_key.mappings.g.o["2"] = "Open changed file"
lvim.builtin.which_key.mappings.g[" "].p["1"] = "<cmd>Gist -b -p<cr>"
lvim.builtin.which_key.mappings.g.p["1"] = "<cmd>lua require 'gitsigns'.preview_hunk()<cr>"
lvim.builtin.which_key.mappings.g[" "].p["2"] = "Create Private"
lvim.builtin.which_key.mappings.g.p["2"] = "Preview Hunk"
lvim.builtin.which_key.mappings.g.R["1"] = "<cmd>lua require 'gitsigns'.reset_buffer()<cr>"
lvim.builtin.which_key.mappings.g.r["1"] = "<cmd>lua require 'gitsigns'.reset_hunk()<cr>"
lvim.builtin.which_key.mappings.g.R["2"] = "Reset Buffer"
lvim.builtin.which_key.mappings.g.r["2"] = "Reset Hunk"
lvim.builtin.which_key.mappings.g.S["1"] = "<cmd>Gitsigns stage_buffer<cr>"
lvim.builtin.which_key.mappings.g.s["1"] = "<cmd>lua require 'gitsigns'.stage_hunk()<cr>"
lvim.builtin.which_key.mappings.g.S["2"] = "Stage Buffer"
lvim.builtin.which_key.mappings.g.s["2"] = "Stage Hunk"
lvim.builtin.which_key.mappings.g.U["1"] = "<cmd>Gitsigns reset_buffer_index<cr>"
lvim.builtin.which_key.mappings.g.u["1"] = "<cmd>lua require 'gitsigns'.undo_stage_hunk()<cr>"
lvim.builtin.which_key.mappings.g.U["2"] = "Reset Buffer Index"
lvim.builtin.which_key.mappings.g.u["2"] = "Undo Stage Hunk"
lvim.builtin.which_key.mappings.g.Y["1"] = "<cmd>lua require'gitlinker'.get_repo_url()<cr>"
lvim.builtin.which_key.mappings.g.Y["2"] = "Link(Repo)"
lvim.builtin.which_key.mappings.g.y = "Link"
lvim.builtin.which_key.mappings["?"].H["1"] = ":h help-summary<CR>"
lvim.builtin.which_key.mappings["?"].h["1"] = ":h help-tags<CR>"
lvim.builtin.which_key.mappings.h["1"] = ":nohlsearch<CR>"
lvim.builtin.which_key.mappings["?"].H["2"] = "Help"
lvim.builtin.which_key.mappings["?"].h["2"] = "Help tags"
lvim.builtin.which_key.mappings.h["2"] = "which_key_ignore"
lvim.builtin.which_key.mappings["?"].i["1"] = ":h index<CR>"
lvim.builtin.which_key.mappings["?"].I["1"] = ":h insert-index<CR>"
lvim.builtin.which_key.mappings["?"].i["2"] = "Index"
lvim.builtin.which_key.mappings["?"].I["2"] = "Insert Index"
lvim.builtin.which_key.mappings.j.name = "justify"
lvim.builtin.which_key.mappings["?"].k["1"] = ":h key-codes<CR>"
lvim.builtin.which_key.mappings["?"].k["2"] = "Key Codes"
lvim.builtin.which_key.mappings.k.name = "kit"
lvim.builtin.which_key.mappings.l["["]["1"] = "<Cmd>lua vim.lsp.buf.incoming_calls()<CR>"
lvim.builtin.which_key.mappings.l["]"]["1"] = "<Cmd>lua vim.lsp.buf.outgoing_calls()<CR>"
lvim.builtin.which_key.mappings["?"].L["1"] = ":h lsp<CR>"
lvim.builtin.which_key.mappings["?"].l["1"] = ":h lua<CR>"
lvim.builtin.which_key.mappings.l["["]["2"] = "Incoming Calls"
lvim.builtin.which_key.mappings["?"].L["2"] = "LSP"
lvim.builtin.which_key.mappings["?"].l["2"] = "Lua"
lvim.builtin.which_key.mappings.l["]"]["2"] = "Outgoing Calls"
lvim.builtin.which_key.mappings.l.a["1"] = "<cmd>Telescope lsp_code_actions<cr>"
lvim.builtin.which_key.mappings.l.A["1"] = "<cmd>Telescope lsp_range_code_actions<cr>"
lvim.builtin.which_key.mappings.l.a["2"] = "Code Action"
lvim.builtin.which_key.mappings.l.A["2"] = "Range Action"
lvim.builtin.which_key.mappings.L.b["1"] = "<cmd>lua require('telescope.builtin').git_commits { cwd = _G.get_runtime_dir() .. '/lvim' }<cr>"
lvim.builtin.which_key.mappings.L.b["2"] = "LunarVim Git Branch"
lvim.builtin.which_key.mappings.l.C["1"] = "<cmd>CmpStatus<cr>"
lvim.builtin.which_key.mappings.l.c["1"] = "<cmd>CodeActionMenu<cr>"
lvim.builtin.which_key.mappings.L.c["1"] = "<cmd>edit /home/xavier/.config/lvim/config.lua<cr>"
lvim.builtin.which_key.mappings.L.C["1"] = "<cmd>LuaCacheClear<cr>"
lvim.builtin.which_key.mappings.l.c["2"] = "Code Action"
lvim.builtin.which_key.mappings.l.C["2"] = "Code Action"
lvim.builtin.which_key.mappings.L.c["2"] = "Edit config.lua"
lvim.builtin.which_key.mappings.L.C["2"] = "LuaCache Clear"
lvim.builtin.which_key.mappings.l["<C-e>"]["1"] = "<cmd>lua vim.lsp.diagnostic.set_loclist()<cr>"
lvim.builtin.which_key.mappings.l["<C-e>"]["2"] = "Diagnostics LocList"
lvim.builtin.which_key.mappings.l.d["1"] = "<cmd>Telescope diagnostics bufnr=0 theme=get_ivy<cr>"
lvim.builtin.which_key.mappings.l[" "].d["1"] = "<cmd>Telescope lsp_definitions<cr>"
lvim.builtin.which_key.mappings.l.d["2"] = "Buffer Diagnostics"
lvim.builtin.which_key.mappings.l[" "].d["2"] = "Def"
lvim.builtin.which_key.mappings.l.e["1"] = "<cmd>Telescope quickfix<cr>"
lvim.builtin.which_key.mappings.l.e["2"] = "Telescope Quickfix"
lvim.builtin.which_key.mappings.L.f["1"] = "<cmd>lua require('lvim.core.telescope.custom-finders').find_lunarvim_files()<cr>"
lvim.builtin.which_key.mappings.l.f["1"] = "<cmd>lua vim.lsp.buf.formatting()<cr>"
-- lvim.builtin.which_key.mappings.l.F["1"] = function ()
lvim.builtin.which_key.mappings.L.f["2"] = "Find LunarVim files"
lvim.builtin.which_key.mappings.l.f["2"] = "Format"
lvim.builtin.which_key.mappings.l.F["2"] = "Format & Save"
lvim.builtin.which_key.mappings.L.g["1"] = "<cmd>lua require('lvim.core.telescope.custom-finders').grep_lunarvim_files()<cr>"
lvim.builtin.which_key.mappings.L.g["2"] = "Grep LunarVim files"
lvim.builtin.which_key.mappings.l.i["1"] = "<cmd>LspInfo<cr>"
lvim.builtin.which_key.mappings.l.I["1"] = "<cmd>LspInstallInfo<cr>"
lvim.builtin.which_key.mappings.L.i["1"] = "<cmd>lua require('lvim.core.info').toggle_popup(vim.bo.filetype)<cr>"
lvim.builtin.which_key.mappings.L.I["1"] = "<cmd>lua require('lvim.core.telescope.custom-finders').view_lunarvim_changelog()<cr>"
lvim.builtin.which_key.mappings.l[" "].i["1"] = "<cmd>Telescope lsp_implementations<cr>"
lvim.builtin.which_key.mappings.l[" "].i["2"] = "Impl"
lvim.builtin.which_key.mappings.l.i["2"] = "Info"
lvim.builtin.which_key.mappings.l.I["2"] = "Installer Info"
lvim.builtin.which_key.mappings.L.i["2"] = "Toggle LunarVim Info"
lvim.builtin.which_key.mappings.L.I["2"] = "View LunarVim's changelog"
lvim.builtin.which_key.mappings.l.j["1"] = "<cmd>lua vim.diagnostic.goto_next()<cr>"
lvim.builtin.which_key.mappings.l.j["2"] = "Next Diagnostic"
lvim.builtin.which_key.mappings.l.k["1"] = "<cmd>lua vim.diagnostic.goto_prev()<cr>"
lvim.builtin.which_key.mappings.L.k["1"] = "<cmd>Telescope keymaps<cr>"
lvim.builtin.which_key.mappings.l.k["2"] = "Prev Diagnostic"
lvim.builtin.which_key.mappings.L.k["2"] = "View LunarVim's keymappings"
lvim.builtin.which_key.mappings.L.L["1"] = "<cmd>LuaCacheLog<cr>"
lvim.builtin.which_key.mappings.l.l["1"] = "<cmd>lua vim.lsp.codelens.run()<cr>"
lvim.builtin.which_key.mappings.l.l["2"] = "CodeLens Action"
lvim.builtin.which_key.mappings.L.L["2"] = "LuaCache Log"
lvim.builtin.which_key.mappings.L.l.d["1"] = "<cmd>lua require('lvim.core.terminal').toggle_log_view(require('lvim.core.log').get_path())<cr>"
lvim.builtin.which_key.mappings.L.l.D["1"] = "<cmd>lua vim.fn.execute('edit ' .. require('lvim.core.log').get_path())<cr>"
lvim.builtin.which_key.mappings.L.l.D["2"] = "Open the default logfile"
lvim.builtin.which_key.mappings.L.l.d["2"] = "view default log"
lvim.builtin.which_key.mappings.L.l.l["1"] = "<cmd>lua require('lvim.core.terminal').toggle_log_view(vim.lsp.get_log_path())<cr>"
lvim.builtin.which_key.mappings.L.l.L["1"] = "<cmd>lua vim.fn.execute('edit ' .. vim.lsp.get_log_path())<cr>"
lvim.builtin.which_key.mappings.L.l.L["2"] = "Open the LSP logfile"
lvim.builtin.which_key.mappings.L.l.l["2"] = "view lsp log"
lvim.builtin.which_key.mappings.L.l.N["1"] = "<cmd>edit $NVIM_LOG_FILE<cr>"
lvim.builtin.which_key.mappings.L.l.n["1"] = "<cmd>lua require('lvim.core.terminal').toggle_log_view(os.getenv('NVIM_LOG_FILE'))<cr>"
lvim.builtin.which_key.mappings.L.l.N["2"] = "Open the Neovim logfile"
lvim.builtin.which_key.mappings.L.l.n["2"] = "view neovim log"
lvim.builtin.which_key.mappings.L.l.name = "+logs"
lvim.builtin.which_key.mappings.L.l.P["1"] = "<cmd>exe 'edit '.stdpath('cache').'/packer.nvim.log'<cr>"
lvim.builtin.which_key.mappings.L.l.p["1"] = "<cmd>lua require('lvim.core.terminal').toggle_log_view('packer.nvim')<cr>"
lvim.builtin.which_key.mappings.L.l.P["2"] = "Open the Packer logfile"
lvim.builtin.which_key.mappings.L.l.p["2"] = "view packer log"
lvim.builtin.which_key.mappings.l.n["1"] = "<cmd>NullLsInfo<cr>"
lvim.builtin.which_key.mappings.l.n["2"] = "Null LS"
lvim.builtin.which_key.mappings.l.name = "LSP"
lvim.builtin.which_key.mappings.L.name = "+LunarVim"
lvim.builtin.which_key.mappings.l[" "].name = "Telescope"
lvim.builtin.which_key.mappings.l.o["1"] = "<cmd>SymbolsOutline<cr>"
lvim.builtin.which_key.mappings.l.o["2"] = "Outline"
lvim.builtin.which_key.mappings.L.P["1"] = "<cmd>LuaCacheProfile<cr>"
lvim.builtin.which_key.mappings.L.P["2"] = "LuaCache Profile"
lvim.builtin.which_key.mappings.l.p.d["1"] = "<cmd>lua require('lvim.lsp.peek').Peek('definition')<cr>"
lvim.builtin.which_key.mappings.l.p.d["2"] = "Definition"
lvim.builtin.which_key.mappings.l.p.i["1"] = "<cmd>lua require('lvim.lsp.peek').Peek('implementation')<cr>"
lvim.builtin.which_key.mappings.l.p.i["2"] = "Implementation"
lvim.builtin.which_key.mappings.l.p.name = "Peek"
lvim.builtin.which_key.mappings.l.p.t["1"] = "<cmd>lua require('lvim.lsp.peek').Peek('typeDefinition')<cr>"
lvim.builtin.which_key.mappings.l.p.t["2"] = "Type Definition"
lvim.builtin.which_key.mappings.l.q["1"] = ""
lvim.builtin.which_key.mappings.l.q["2"] = "which_key_ignore"
lvim.builtin.which_key.mappings.l.r["1"] = "<cmd>lua vim.lsp.buf.rename()<cr>"
lvim.builtin.which_key.mappings.L.R["1"] = "<cmd>LvimCacheReset<cr>"
lvim.builtin.which_key.mappings.L.r["1"] = "<cmd>LvimReload<cr>"
lvim.builtin.which_key.mappings.l[" "].r["1"] = "<cmd>Telescope lsp_references<cr>"
lvim.builtin.which_key.mappings.L.R["2"] = "LvimCache Reset"
lvim.builtin.which_key.mappings.l[" "].r["2"] = "Ref"
lvim.builtin.which_key.mappings.L.r["2"] = "Reload LunarVim's configuration"
lvim.builtin.which_key.mappings.l.r["2"] = "Rename"
lvim.builtin.which_key.mappings.l.s["1"] = "<cmd>Telescope lsp_document_symbols<cr>"
lvim.builtin.which_key.mappings.l.S["1"] = "<cmd>Telescope lsp_dynamic_workspace_symbols<cr>"
lvim.builtin.which_key.mappings.l.s["2"] = "Document Symbols"
lvim.builtin.which_key.mappings.l.S["2"] = "Workspace Symbols"
lvim.builtin.which_key.mappings.L.u["1"] = "<cmd>LvimUpdate<cr>"
lvim.builtin.which_key.mappings.L.u["2"] = "Update LunarVim"
lvim.builtin.which_key.mappings.l.v["1"] = "<cmd>Vista!!<cr>"
lvim.builtin.which_key.mappings.l.v["2"] = "Vista"
lvim.builtin.which_key.mappings.l.W["1"] = "<cmd>lua pp(vim.lsp.buf.list_workspace_folders())<cr>"
lvim.builtin.which_key.mappings.l.w["1"] = "<cmd>Telescope diagnostics<cr>"
lvim.builtin.which_key.mappings.l.w["2"] = "Diagnostics"
lvim.builtin.which_key.mappings.l.W["2"] = "Workspace folders"
lvim.builtin.which_key.mappings["?"].M["1"] = ":h map-modes<CR>"
lvim.builtin.which_key.mappings["?"].m["1"] = ":h vim-modes<CR>"
lvim.builtin.which_key.mappings["?"].M["2"] = "Map Modes"
lvim.builtin.which_key.mappings["?"].m["2"] = "Modes"
lvim.builtin.which_key.mappings["?"].N["1"] = ":h notation<CR>"
lvim.builtin.which_key.mappings["?"].n["1"] = ":viu<CR>"
lvim.builtin.which_key.mappings["?"].n["2"] = "Normal Index"
lvim.builtin.which_key.mappings["?"].N["2"] = "Notation"
lvim.builtin.which_key.mappings["?"].name = "Vim"
lvim.builtin.which_key.mappings["?"].O["1"] = ":h option-list<CR>"
lvim.builtin.which_key.mappings["?"].o["1"] = ":options<CR>"
lvim.builtin.which_key.mappings["?"].O["2"] = "Option List"
lvim.builtin.which_key.mappings["?"].o["2"] = "Options"
lvim.builtin.which_key.mappings["?"].p["1"] = ":h local-additions<CR>"
lvim.builtin.which_key.mappings["?"].p["2"] = "Plugin"
lvim.builtin.which_key.mappings.p.c["1"] = "<cmd>PackerCompile<cr>"
lvim.builtin.which_key.mappings.p.C["1"] = "<cmd>PackerCompile profile=true<cr>"
lvim.builtin.which_key.mappings.p.c["2"] = "Compile"
lvim.builtin.which_key.mappings.p.C["2"] = "Compile+"
lvim.builtin.which_key.mappings.p.i["1"] = "<cmd>PackerInstall<cr>"
lvim.builtin.which_key.mappings.p.I["1"] = ":lua pp()<left>"
lvim.builtin.which_key.mappings.p.I["2"] = "Inspect"
lvim.builtin.which_key.mappings.p.i["2"] = "Install"
lvim.builtin.which_key.mappings.p.name = "Packer"
lvim.builtin.which_key.mappings.p.p["1"] = "<cmd>lua require('telescope').extensions.packer.packer { layout_config = { preview_width = 0.5} }<cr>"
lvim.builtin.which_key.mappings.p.P["1"] = "<cmd>PackerProfile<cr>"
lvim.builtin.which_key.mappings.p.P["2"] = "Profile"
lvim.builtin.which_key.mappings.p.p["2"] = "Telescope Packer"
lvim.builtin.which_key.mappings.p.r["1"] = "<cmd>lua require('lvim.plugin-loader').recompile()<cr>"
lvim.builtin.which_key.mappings.p.r["2"] = "Re-compile"
lvim.builtin.which_key.mappings.p.s["1"] = "<cmd>PackerStatus<cr>"
lvim.builtin.which_key.mappings.p.S["1"] = "<cmd>PackerSync<cr>"
lvim.builtin.which_key.mappings.p.s["2"] = "Status"
lvim.builtin.which_key.mappings.p.S["2"] = "Sync"
lvim.builtin.which_key.mappings.p.u["1"] = "<cmd>PackerUpdate<cr>"
lvim.builtin.which_key.mappings.p.u["2"] = "Update"
lvim.builtin.which_key.mappings.q["1"] = "<cmd>q!<CR>"
lvim.builtin.which_key.mappings["?"].q["1"] = ":h quickref<CR>"
lvim.builtin.which_key.mappings.Q["1"] = ":tabclose<CR>"
lvim.builtin.which_key.mappings["?"].q["2"] = "Quick Reference"
lvim.builtin.which_key.mappings.q["2"] = "Quit"
lvim.builtin.which_key.mappings.Q["2"] = "which_key_ignore"
lvim.builtin.which_key.mappings.r.f["1"] = "<cmd>lua require('spectre').open_file_search()<cr>"
lvim.builtin.which_key.mappings.r.f["2"] = "Replace Buffer"
lvim.builtin.which_key.mappings.r.name = "replace"
lvim.builtin.which_key.mappings.r.r["1"] = "<cmd>lua require('spectre').open()<cr>"
lvim.builtin.which_key.mappings.r.r["2"] = "Replace"
lvim.builtin.which_key.mappings.r.w["1"] = "<cmd>lua require('spectre').open_visual({select_word=true})<cr>"
lvim.builtin.which_key.mappings.r.w["2"] = "Replace Word"
lvim.builtin.which_key.mappings.s[":"]["1"] = "<cmd>Telescope command_history<CR>"
lvim.builtin.which_key.mappings.s["."]["1"] = "<cmd>Telescope file_browser hidden=v:true<CR>"
lvim.builtin.which_key.mappings.s["?"]["1"] = "<cmd>Telescope help_tags<CR>"
lvim.builtin.which_key.mappings.s["'"]["1"] = "<cmd>Telescope marks<CR>"
lvim.builtin.which_key.mappings.s["""]["1"] = "<cmd>Telescope registers<CR>"
lvim.builtin.which_key.mappings.s[" "]["1"] = "<cmd>Telescope resume<CR>"
lvim.builtin.which_key.mappings.s["/"]["1"] = "<cmd>Telescope search_history<CR>"
lvim.builtin.which_key.mappings["?"].s["1"] = ":h startup<CR>"
lvim.builtin.which_key.mappings.s[" "]["2"] = "Ôë™"
lvim.builtin.which_key.mappings.s["."]["2"] = "Browser"
lvim.builtin.which_key.mappings.s[":"]["2"] = "Command History"
lvim.builtin.which_key.mappings.s["?"]["2"] = "Help"
lvim.builtin.which_key.mappings.s["'"]["2"] = "Marks"
lvim.builtin.which_key.mappings.s["""]["2"] = "Registers"
lvim.builtin.which_key.mappings.s["/"]["2"] = "Search History"
lvim.builtin.which_key.mappings["?"].s["2"] = "Startup"
lvim.builtin.which_key.mappings.s.a["1"] = "<cmd>Telescope autocommands<CR>"
lvim.builtin.which_key.mappings.s.a["2"] = "Autocommands"
lvim.builtin.which_key.mappings.s.b["1"] = "<cmd>Telescope current_buffer_fuzzy_find<CR>"
lvim.builtin.which_key.mappings.s.b["2"] = "Buffer String"
lvim.builtin.which_key.mappings.s.c["1"] = "<cmd>lua require('telescope.builtin').colorscheme({enable_preview = true})<cr>"
lvim.builtin.which_key.mappings.s.C["1"] = "<cmd>Telescope commands<cr>"
lvim.builtin.which_key.mappings.s.c["2"] = "Colorscheme"
lvim.builtin.which_key.mappings.s.C["2"] = "Commands"
lvim.builtin.which_key.mappings.s["<C-e>"]["1"] = "<cmd>Telescope loclist<CR>"
lvim.builtin.which_key.mappings.s["<C-e>"]["2"] = "LocList Bug"
lvim.builtin.which_key.mappings.s["<C-q>"]["1"] = "<cmd>Telescope quickfix<CR>"
lvim.builtin.which_key.mappings.s["<C-q>"]["2"] = "QuickList"
lvim.builtin.which_key.mappings.s.f["1"] = "<cmd>Telescope find_files hidden=v:true no_ignore=v:true<cr>"
lvim.builtin.which_key.mappings.s.f["2"] = "Find files"
lvim.builtin.which_key.mappings.s.g["1"] = "<cmd>Telescope live_grep <cr>"
lvim.builtin.which_key.mappings.s.G["1"] = "<cmd>Telescope live_grep grep_open_files=v:true<cr>"
lvim.builtin.which_key.mappings.s.g["2"] = "Grep"
lvim.builtin.which_key.mappings.s.G["2"] = "Grep in opened buffer"
lvim.builtin.which_key.mappings.s.h["1"] = "<cmd>Telescope help_tags<cr>"
lvim.builtin.which_key.mappings.s.H["1"] = "<cmd>Telescope highlights<cr>"
lvim.builtin.which_key.mappings.s.h["2"] = "Find Help"
lvim.builtin.which_key.mappings.s.H["2"] = "Highlights"
lvim.builtin.which_key.mappings.s.j["1"] = "<cmd>Telescope jumplist<cr>"
lvim.builtin.which_key.mappings.s.j["2"] = "Gump List"
lvim.builtin.which_key.mappings.s.k["1"] = "<cmd>Telescope keymaps<cr>"
lvim.builtin.which_key.mappings.s.k["2"] = "Keymaps"
lvim.builtin.which_key.mappings.s.M["1"] = "<cmd>Telescope man_pages<cr>"
lvim.builtin.which_key.mappings.s.M["2"] = "Man Pages"
lvim.builtin.which_key.mappings.s.m.c["1"] = "<Cmd>lua require('telescope').extensions.frecency.frecency{ default_text = ':CWD:' }<CR>"
lvim.builtin.which_key.mappings.s.m.c["2"] = "CWD"
lvim.builtin.which_key.mappings.s.m.l["1"] = "<Cmd>lua require('telescope').extensions.frecency.frecency{ default_text = ':LSP:' }<CR>"
lvim.builtin.which_key.mappings.s.m.l["2"] = "LSP"
lvim.builtin.which_key.mappings.s.m.m["1"] = "<Cmd>lua require('telescope').extensions.frecency.frecency()<CR>"
lvim.builtin.which_key.mappings.s.m.m["2"] = "Frecency"
lvim.builtin.which_key.mappings.s.m.name = "MRU"
lvim.builtin.which_key.mappings.s.n["1"] = "<cmd>Telescope notify<cr>"
lvim.builtin.which_key.mappings.s.n["2"] = "Notify"
lvim.builtin.which_key.mappings.s.name = "Search"
lvim.builtin.which_key.mappings.s.o["1"] = "<cmd>Telescope sessions layout_strategy=bottom_pane layout_config={\"prompt_position\":\"top\"}<CR>"
lvim.builtin.which_key.mappings.s.o["2"] = "Sessions"
lvim.builtin.which_key.mappings.s.P["1"] = "<cmd>Telescope pickers<CR>"
lvim.builtin.which_key.mappings.s.p["1"] = "<cmd>Telescope projects<CR>"
lvim.builtin.which_key.mappings.s.P["2"] = "<Pickers>"
lvim.builtin.which_key.mappings.s.p["2"] = "Projects"
lvim.builtin.which_key.mappings.s.r["1"] = "<cmd>Telescope oldfiles<cr>"
lvim.builtin.which_key.mappings.s.R["1"] = "<cmd>Telescope reloader<CR>"
lvim.builtin.which_key.mappings.s.r["2"] = "Open Recent File"
lvim.builtin.which_key.mappings.s.R["2"] = "Reload Module"
lvim.builtin.which_key.mappings.s.S["1"] = "<cmd>Telescope spell_suggest<CR>"
lvim.builtin.which_key.mappings.s.S["2"] = "Spell"
lvim.builtin.which_key.mappings.s.s.e["1"] = "<cmd>lua require'telescope.builtin'.symbols{ sources = {'emoji'} }<CR>"
lvim.builtin.which_key.mappings.s.s.e["2"] = "Emoji"
lvim.builtin.which_key.mappings.s.s.g["1"] = "<cmd>lua require'telescope.builtin'.symbols{ sources = {'gitmoji'} }<CR>"
lvim.builtin.which_key.mappings.s.s.g["2"] = "Git"
lvim.builtin.which_key.mappings.s.s.j["1"] = "<cmd>lua require'telescope.builtin'.symbols{ sources = {'julia'} }<CR>"
lvim.builtin.which_key.mappings.s.s.j["2"] = "Julia"
lvim.builtin.which_key.mappings.s.s.k["1"] = "<cmd>lua require'telescope.builtin'.symbols{ sources = {'kaomoji'} }<CR>"
lvim.builtin.which_key.mappings.s.s.k["2"] = "Kaomoji"
lvim.builtin.which_key.mappings.s.s.l["1"] = "<cmd>lua require'telescope.builtin'.symbols{ sources = {'latex'} }<CR>"
lvim.builtin.which_key.mappings.s.s.l["2"] = "LaTeX"
lvim.builtin.which_key.mappings.s.s.m["1"] = "<cmd>lua require'telescope.builtin'.symbols{ sources = {'math'} }<CR>"
lvim.builtin.which_key.mappings.s.s.m["2"] = "Math"
lvim.builtin.which_key.mappings.s.s.name = "symbol"
lvim.builtin.which_key.mappings.s.s.s["1"] = "<cmd>Telescope symbols<CR>"
lvim.builtin.which_key.mappings.s.s.s["2"] = "Symbols"
lvim.builtin.which_key.mappings.s.T["1"] = "<cmd>Telescope grep_string<CR>"
lvim.builtin.which_key.mappings.s.t["1"] = "<cmd>TodoTelescope<CR>"
lvim.builtin.which_key.mappings.s.T["2"] = "Text under cursor"
lvim.builtin.which_key.mappings.s.t["2"] = "Todo"
lvim.builtin.which_key.mappings.s["<tab>"]["1"] = "<cmd>Telescope<CR>"
lvim.builtin.which_key.mappings.s["<tab>"]["2"] = "Ôë´"
lvim.builtin.which_key.mappings.s.v.c["1"] = "<cmd>Telescope commands<cr>"
lvim.builtin.which_key.mappings.s.v.c["2"] = "Commands"
lvim.builtin.which_key.mappings.s.v.f["1"] = "<cmd>Telescope filetypes<CR>"
lvim.builtin.which_key.mappings.s.v.f["2"] = "FileTypes"
lvim.builtin.which_key.mappings.s.v.name = "vim"
lvim.builtin.which_key.mappings.s.v.o["1"] = "<cmd>Telescope vim_options<CR>"
lvim.builtin.which_key.mappings.s.v.o["2"] = "Options"
lvim.builtin.which_key.mappings.s.v.t["1"] = "<cmd>Telescope current_buffer_tags<CR>"
lvim.builtin.which_key.mappings.s.v.T["1"] = "<cmd>Telescope tags<CR>"
lvim.builtin.which_key.mappings.s.v.T["2"] = "All Tags"
lvim.builtin.which_key.mappings.s.v.t["2"] = "Tags"
lvim.builtin.which_key.mappings.s.y["1"] = "<cmd>Telescope neoclip<CR>"
lvim.builtin.which_key.mappings.s.y["2"] = "Clipboard"
lvim.builtin.which_key.mappings.s.z["1"] = "<cmd>lua require'telescope'.extensions.zoxide.list{}<CR>"
lvim.builtin.which_key.mappings.s.z["2"] = "Z"
lvim.builtin.which_key.mappings["?"].t["1"] = ":h objects<CR>"
lvim.builtin.which_key.mappings["?"].T["1"] = ":h tips<CR>"
lvim.builtin.which_key.mappings["?"].t["2"] = "Text objects"
lvim.builtin.which_key.mappings["?"].T["2"] = "Tips"
lvim.builtin.which_key.mappings.t.b = "Biscuits"
lvim.builtin.which_key.mappings.T.h["1"] = ":TSBufToggle highlight<CR>"
lvim.builtin.which_key.mappings.T.h["2"] = "Toggle Highlight(Buffer)"
lvim.builtin.which_key.mappings.T.i["1"] = ":TSConfigInfo<cr>"
lvim.builtin.which_key.mappings.T.I["1"] = ":TSModuleInfo<CR>"
lvim.builtin.which_key.mappings.T.i["2"] = "Info"
lvim.builtin.which_key.mappings.T.I["2"] = "Telescope"
lvim.builtin.which_key.mappings.t.l["1"] = ":lua require('user.tools').toggle_tabline()<cr>"
lvim.builtin.which_key.mappings.t.l["2"] = "Tabline"
lvim.builtin.which_key.mappings.t.m["1"] = "<cmd>MinimapToggle<cr>"
lvim.builtin.which_key.mappings.t.m["2"] = "Minimap"
lvim.builtin.which_key.mappings.t.name = "tog"
lvim.builtin.which_key.mappings.T.name = "Treesitter"
lvim.builtin.which_key.mappings.T.p["1"] = ":TSPlaygroundToggle<cr>"
lvim.builtin.which_key.mappings.T.p["2"] = "Playground"
lvim.builtin.which_key.mappings.T.r["1"] = ":TSBufToggle rainbow<CR>"
lvim.builtin.which_key.mappings.T.r["2"] = "Toggle Rainbow"
lvim.builtin.which_key.mappings.T.t["1"] = "<cmd>Telescope treesitter<CR>"
lvim.builtin.which_key.mappings.t.t["1"] = "<cmd>TodoQuickFix<cr>"
lvim.builtin.which_key.mappings.T.T["1"] = "<cmd>TSHighlightCapturesUnderCursor<cr>"
lvim.builtin.which_key.mappings.T.T["2"] = "Highlight"
lvim.builtin.which_key.mappings.T.t["2"] = "Telescope"
lvim.builtin.which_key.mappings.t.t["2"] = "Todo"
lvim.builtin.which_key.mappings["?"].u["1"] = ":h user-manual<CR>"
lvim.builtin.which_key.mappings["?"].u["2"] = "User Manual"
lvim.builtin.which_key.mappings["?"].v["1"] = ":h vim-variable<CR>"
lvim.builtin.which_key.mappings["?"].v["2"] = "Vim Variable"
lvim.builtin.which_key.mappings.w["1"] = "<cmd>w!<CR>"
lvim.builtin.which_key.mappings["?"].w["1"] = ":h ctrl-w<CR>"
lvim.builtin.which_key.mappings.w["2"] = "Save"
lvim.builtin.which_key.mappings["?"].w["2"] = "Windows Index"
lvim.builtin.which_key.mappings.x["."]["1"] = "<cmd>Trouble telescope<cr>"
lvim.builtin.which_key.mappings["?"].x["1"] = ":h visual-index<CR>"
lvim.builtin.which_key.mappings.x["."]["2"] = "Telescope"
lvim.builtin.which_key.mappings["?"].x["2"] = "Visual Index"
lvim.builtin.which_key.mappings.x["<C-e>"]["1"] = "<cmd>Trouble loclist<cr>"
lvim.builtin.which_key.mappings.x["<C-e>"]["2"] = "LocList"
lvim.builtin.which_key.mappings.x["<C-q>"]["1"] = "<cmd>Trouble quickfix<cr>"
lvim.builtin.which_key.mappings.x["<C-q>"]["2"] = "QuickFix"
lvim.builtin.which_key.mappings.x.D["1"] = "<cmd>Trouble lsp_definitions<cr>"
lvim.builtin.which_key.mappings.x.d["1"] = "<cmd>Trouble lsp_document_diagnostics<cr>"
lvim.builtin.which_key.mappings.x.D["2"] = "Def"
lvim.builtin.which_key.mappings.x.d["2"] = "Diagnostics"
lvim.builtin.which_key.mappings.x.I["1"] = "<cmd>Trouble lsp_implementations<cr>"
lvim.builtin.which_key.mappings.x.I["2"] = "Impl"
lvim.builtin.which_key.mappings.x.name = "trouble"
lvim.builtin.which_key.mappings.x.R["1"] = "<cmd>Trouble lsp_references<cr>"
lvim.builtin.which_key.mappings.x.R["2"] = "Ref"
lvim.builtin.which_key.mappings.x.t["1"] = "<cmd>TodoTrouble<cr>"
lvim.builtin.which_key.mappings.x.t["2"] = "Todo"
lvim.builtin.which_key.mappings.x.w["1"] = "<cmd>Trouble lsp_workspace_diagnostics<cr>"
lvim.builtin.which_key.mappings.x.w["2"] = "Workspace Diagnostics"
lvim.builtin.which_key.mappings.x.x["1"] = "<cmd>TroubleToggle<cr>"
lvim.builtin.which_key.mappings.x.x["2"] = "Open"
lvim.builtin.which_key.mappings["?"].y["1"] = ":h [<CR>"
lvim.builtin.which_key.mappings["?"].y["2"] = "[ ] Index"
lvim.builtin.which_key.mappings.z["1"] = "<cmd>ZenMode<cr>"
lvim.builtin.which_key.mappings["?"].z["1"] = ":h z<CR>"
lvim.builtin.which_key.mappings.z["2"] = "Zen"
lvim.builtin.which_key.mappings["?"].z["2"] = "z Index"
-- lvim.builtin.which_key.on_config_done = function ()
lvim.builtin.which_key.opts.mode = "n"
lvim.builtin.which_key.opts.noremap = true
lvim.builtin.which_key.opts.nowait = true
lvim.builtin.which_key.opts.prefix = "<leader>"
lvim.builtin.which_key.opts.silent = true
lvim.builtin.which_key.setup.hidden["1"] = "<silent>"
lvim.builtin.which_key.setup.hidden["2"] = "<cmd>"
lvim.builtin.which_key.setup.hidden["3"] = "<Cmd>"
lvim.builtin.which_key.setup.hidden["4"] = "<CR>"
lvim.builtin.which_key.setup.hidden["5"] = "call"
lvim.builtin.which_key.setup.hidden["6"] = "lua"
lvim.builtin.which_key.setup.hidden["7"] = "^:"
lvim.builtin.which_key.setup.hidden["8"] = "^ "
lvim.builtin.which_key.setup.icons.breadcrumb = "¬ª"
lvim.builtin.which_key.setup.icons.group = "+"
lvim.builtin.which_key.setup.icons.separator = "‚ûú"
lvim.builtin.which_key.setup.ignore_missing = false
lvim.builtin.which_key.setup.layout.height.max = 25
lvim.builtin.which_key.setup.layout.height.min = 4
lvim.builtin.which_key.setup.layout.spacing = 3
lvim.builtin.which_key.setup.layout.width.max = 50
lvim.builtin.which_key.setup.layout.width.min = 20
lvim.builtin.which_key.setup.operators.gc = "Comments"
lvim.builtin.which_key.setup.plugins.marks = true
lvim.builtin.which_key.setup.plugins.presets.g = true
lvim.builtin.which_key.setup.plugins.presets.motions = true
lvim.builtin.which_key.setup.plugins.presets.nav = true
lvim.builtin.which_key.setup.plugins.presets.operators = false
lvim.builtin.which_key.setup.plugins.presets.text_objects = true
lvim.builtin.which_key.setup.plugins.presets.windows = true
lvim.builtin.which_key.setup.plugins.presets.z = true
lvim.builtin.which_key.setup.plugins.registers = true
lvim.builtin.which_key.setup.plugins.spelling.enabled = true
lvim.builtin.which_key.setup.plugins.spelling.suggestions = 20
lvim.builtin.which_key.setup.show_help = true
lvim.builtin.which_key.setup.window.border = "single"
lvim.builtin.which_key.setup.window.margin["1"] = 1
lvim.builtin.which_key.setup.window.margin["2"] = 0
lvim.builtin.which_key.setup.window.margin["3"] = 1
lvim.builtin.which_key.setup.window.margin["4"] = 0
lvim.builtin.which_key.setup.window.padding["1"] = 2
lvim.builtin.which_key.setup.window.padding["2"] = 2
lvim.builtin.which_key.setup.window.padding["3"] = 2
lvim.builtin.which_key.setup.window.padding["4"] = 2
lvim.builtin.which_key.setup.window.position = "bottom"
lvim.builtin.which_key.vmappings["/"]["1"] = "<ESC><CMD>lua require('Comment.api').toggle_linewise_op(vim.fn.visualmode())<CR>"
lvim.builtin.which_key.vmappings["/"]["2"] = "Comment"
lvim.builtin.which_key.vmappings.g.name = "git"
lvim.builtin.which_key.vmappings.g.y = "Link"
lvim.builtin.which_key.vmappings.l.f["1"] = "<Cmd>vim.lsp.buf.range_formatting()<CR>"
lvim.builtin.which_key.vmappings.l.f["2"] = "Format"
lvim.builtin.which_key.vmappings.l.name = "lsp"
lvim.builtin.which_key.vmappings.p.I["1"] = "y:lua pp(<C-r>\")"
lvim.builtin.which_key.vmappings.p.I["2"] = "Inspect"
lvim.builtin.which_key.vmappings.p.name = "pack"
lvim.builtin.which_key.vmappings.s.f["1"] = "y<cmd>Telescope fd<CR><C-r>\""
lvim.builtin.which_key.vmappings.s.f["2"] = "Find files"
lvim.builtin.which_key.vmappings.s.g["1"] = "y<cmd>Telescope live_grep<CR><C-r>\""
lvim.builtin.which_key.vmappings.s.g["2"] = "Grep"
lvim.builtin.which_key.vmappings.s.name = "search"
lvim.builtin.which_key.vmappings.s.y["1"] = "dh<cmd>Telescope neoclip<CR>"
lvim.builtin.which_key.vmappings.s.y["2"] = "Clipboard"
lvim.builtin.which_key.vopts.mode = "v"
lvim.builtin.which_key.vopts.noremap = true
lvim.builtin.which_key.vopts.nowait = true
lvim.builtin.which_key.vopts.prefix = "<leader>"
lvim.builtin.which_key.vopts.silent = true
lvim.colorscheme = "onedarker"
lvim.database.auto_execute = 1
lvim.database.save_location = "/home/xavier/.config/lunarvim_db"
lvim.format_on_save = false
lvim.keys.command_mode["<A-b>"]["1"] = "<S-Left> "
lvim.keys.command_mode["<A-b>"]["2"].silent = false
lvim.keys.command_mode["<A-f>"]["1"] = "<S-Right>"
lvim.keys.command_mode["<A-f>"]["2"].silent = false
lvim.keys.command_mode["<C-a>"]["1"] = "<Home>"
lvim.keys.command_mode["<C-a>"]["2"].silent = false
lvim.keys.command_mode["<C-e>"]["1"] = "<End>"
lvim.keys.command_mode["<C-e>"]["2"].silent = false
lvim.keys.command_mode["<C-V>"] = "<C-R>+"
lvim.keys.insert_mode["<A-b>"] = "<S-Left>"
lvim.keys.insert_mode["<A-f>"] = "<S-Right>"
lvim.keys.insert_mode["<C-a>"] = "<Home>"
lvim.keys.insert_mode["<C-Down>"] = "<C-o>:m .+1<CR>"
lvim.keys.insert_mode["<C-e>"] = "<End>"
lvim.keys.insert_mode["<C-U>"] = "<C-G>u<C-U>"
lvim.keys.insert_mode["<C-Up>"] = "<C-o>:m .-2<CR>"
lvim.keys.insert_mode["<C-V>"] = "<C-G>u<C-R><C-O>+"
lvim.keys.insert_mode["<C-W>"] = "<C-G>u<C-W>"
lvim.keys.normal_mode["<C-e>"] = ":call LocListToggle()<CR>"
lvim.keys.normal_mode["]e"] = ":lnext<CR>"
lvim.keys.normal_mode["[e"] = ":lprev<CR>"
lvim.keys.normal_mode["g<C-l>"] = "<cmd>nohlsearch<cr><C-l>"
lvim.keys.normal_mode.j["1"] = "v:count == 0 ? 'gj' : 'j'"
lvim.keys.normal_mode.j["2"].expr = true
lvim.keys.normal_mode.j["2"].noremap = true
lvim.keys.normal_mode.k["1"] = "v:count == 0 ? 'gk' : 'k'"
lvim.keys.normal_mode.k["2"].expr = true
lvim.keys.normal_mode.k["2"].noremap = true
lvim.keys.normal_mode.Y = "y$"
lvim.keys.normal_mode.ZA = ":wqa<CR>"
lvim.keys.term_mode.JJ = "<C-\\><C-N>"
lvim.keys.term_mode.JK = "<C-\\><C-N>"
lvim.keys.visual_mode.d = "\"_d"
lvim.keys.visual_mode.X = "\"+x"
lvim.keys.visual_mode.Y = "\"+y"
lvim.leader = "space"
lvim.log.level = "info"
lvim.log.override_notify = false
lvim.log.viewer.cmd = "lnav"
lvim.log.viewer.layout_config.direction = "horizontal"
lvim.log.viewer.layout_config.open_mapping = ""
lvim.log.viewer.layout_config.size = 40
lvim.lsp.automatic_servers_installation = true
lvim.lsp.buffer_mappings.normal_mode.gD["1"] = "<cmd>lua vim.lsp.buf.declaration()<CR>"
lvim.lsp.buffer_mappings.normal_mode.gd["1"] = "<cmd>lua vim.lsp.buf.definition()<CR>"
lvim.lsp.buffer_mappings.normal_mode.gD["2"] = "Goto declaration"
lvim.lsp.buffer_mappings.normal_mode.gd["2"] = "Goto Definition"
lvim.lsp.buffer_mappings.normal_mode.gI["1"] = "<cmd>lua vim.lsp.buf.implementation()<CR>"
lvim.lsp.buffer_mappings.normal_mode.gI["2"] = "Goto Implementation"
lvim.lsp.buffer_mappings.normal_mode.gl["1"] = "<cmd>lua require'lvim.lsp.handlers'.show_line_diagnostics()<CR>"
lvim.lsp.buffer_mappings.normal_mode.gl["2"] = "Show line diagnostics"
lvim.lsp.buffer_mappings.normal_mode.gp["1"] = "<cmd>lua require'lvim.lsp.peek'.Peek('definition')<CR>"
lvim.lsp.buffer_mappings.normal_mode.gp["2"] = "Peek definition"
lvim.lsp.buffer_mappings.normal_mode.gr["1"] = "<cmd>lua vim.lsp.buf.references()<CR>"
lvim.lsp.buffer_mappings.normal_mode.gr["2"] = "Goto references"
lvim.lsp.buffer_mappings.normal_mode.gs["1"] = "<cmd>lua vim.lsp.buf.signature_help()<CR>"
lvim.lsp.buffer_mappings.normal_mode.gs["2"] = "show signature help"
lvim.lsp.buffer_mappings.normal_mode.K["1"] = "<cmd>lua vim.lsp.buf.hover()<CR>"
lvim.lsp.buffer_mappings.normal_mode.K["2"] = "Show hover"
lvim.lsp.code_lens_refresh = true
lvim.lsp.diagnostics.float.border = "rounded"
lvim.lsp.diagnostics.float.focusable = false
-- lvim.lsp.diagnostics.float.format = function ()
lvim.lsp.diagnostics.float.header = ""
lvim.lsp.diagnostics.float.prefix = ""
lvim.lsp.diagnostics.float.source = "always"
lvim.lsp.diagnostics.float.style = "minimal"
lvim.lsp.diagnostics.severity_sort = true
lvim.lsp.diagnostics.signs.active = true
lvim.lsp.diagnostics.signs.values["1"].name = "DiagnosticSignError"
lvim.lsp.diagnostics.signs.values["1"].text = "Ôôô"
lvim.lsp.diagnostics.signs.values["2"].name = "DiagnosticSignWarn"
lvim.lsp.diagnostics.signs.values["2"].text = "Ôî©"
lvim.lsp.diagnostics.signs.values["3"].name = "DiagnosticSignHint"
lvim.lsp.diagnostics.signs.values["3"].text = "Ô†µ"
lvim.lsp.diagnostics.signs.values["4"].name = "DiagnosticSignInfo"
lvim.lsp.diagnostics.signs.values["4"].text = "Ôëâ"
lvim.lsp.diagnostics.underline = true
lvim.lsp.diagnostics.update_in_insert = false
lvim.lsp.diagnostics.virtual_text = false
lvim.lsp.document_highlight = true
lvim.lsp.float.border = "rounded"
lvim.lsp.float.focusable = true
lvim.lsp.float.style = "minimal"
lvim.lsp.override["10"] = "eslintls"
lvim.lsp.override["11"] = "golangci_lint_ls"
lvim.lsp.override["12"] = "grammarly"
lvim.lsp.override["13"] = "graphql"
lvim.lsp.override["14"] = "jedi_language_server"
lvim.lsp.override["15"] = "ltex"
lvim.lsp.override["16"] = "ocamllsp"
lvim.lsp.override["17"] = "phpactor"
lvim.lsp.override["18"] = "psalm"
lvim.lsp.override["19"] = "pylsp"
lvim.lsp.override["1"] = "angularls"
lvim.lsp.override["20"] = "quick_lint_js"
lvim.lsp.override["21"] = "reason_ls"
lvim.lsp.override["22"] = "remark_ls"
lvim.lsp.override["23"] = "rome"
lvim.lsp.override["24"] = "scry"
lvim.lsp.override["25"] = "solang"
lvim.lsp.override["26"] = "solidity_ls"
lvim.lsp.override["27"] = "sorbet"
lvim.lsp.override["28"] = "sourcekit"
lvim.lsp.override["29"] = "spectral"
lvim.lsp.override["2"] = "ansiblels"
lvim.lsp.override["30"] = "sqlls"
lvim.lsp.override["31"] = "sqls"
lvim.lsp.override["32"] = "stylelint_lsp"
lvim.lsp.override["33"] = "tailwindcss"
lvim.lsp.override["34"] = "tflint"
lvim.lsp.override["35"] = "verible"
lvim.lsp.override["36"] = "vuels"
lvim.lsp.override["37"] = "zeta_note"
lvim.lsp.override["38"] = "zk"
lvim.lsp.override["3"] = "ccls"
lvim.lsp.override["4"] = "csharp_ls"
lvim.lsp.override["5"] = "cssmodules_ls"
lvim.lsp.override["6"] = "denols"
lvim.lsp.override["7"] = "ember"
lvim.lsp.override["8"] = "emmet_ls"
lvim.lsp.override["9"] = "eslint"
lvim.lsp.templates_dir = "/home/xavier/.local/share/lunarvim/site/after/ftplugin"
lvim.plugins["10"]["1"] = "code-biscuits/nvim-biscuits"
-- lvim.plugins["10"].config = function ()
lvim.plugins["10"].event = "BufRead"
lvim.plugins["11"]["1"]["1"] = "chaoren/vim-wordmotion"
lvim.plugins["11"]["1"].event = "CursorMoved"
-- lvim.plugins["11"]["1"].setup = function ()
lvim.plugins["11"]["2"]["1"] = "andymass/vim-matchup"
-- lvim.plugins["11"]["2"].config = function ()
lvim.plugins["11"]["2"].event = "CursorMoved"
lvim.plugins["11"]["3"]["1"] = "haya14busa/vim-asterisk"
-- lvim.plugins["11"]["3"].config = function ()
lvim.plugins["11"]["4"]["1"] = "ggandor/lightspeed.nvim"
-- lvim.plugins["11"]["4"].config = function ()
lvim.plugins["11"]["4"].event = "BufRead"
lvim.plugins["11"]["5"]["1"] = "nacro90/numb.nvim"
-- lvim.plugins["11"]["5"].config = function ()
lvim.plugins["11"]["5"].event = "BufRead"
lvim.plugins["11"]["6"]["1"] = "karb94/neoscroll.nvim"
-- lvim.plugins["11"]["6"].config = function ()
lvim.plugins["1"]["1"] = "/home/xavier/.config/nvim"
lvim.plugins["12"]["1"]["1"] = "tpope/vim-surround"
lvim.plugins["12"]["2"]["1"] = "tpope/vim-repeat"
lvim.plugins["12"]["3"]["1"] = "AndrewRadev/splitjoin.vim"
lvim.plugins["12"]["3"].keys["1"] = "gS"
lvim.plugins["12"]["3"].keys["2"] = "gJ"
lvim.plugins["12"]["4"]["1"] = "mg979/vim-visual-multi"
-- lvim.plugins["12"]["4"].config = function ()
lvim.plugins["12"]["5"]["1"] = "junegunn/vim-easy-align"
-- lvim.plugins["12"]["5"].config = function ()
lvim.plugins["12"]["6"]["1"] = "monaqa/dial.nvim"
lvim.plugins["12"]["6"].commit = "3b70b2a"
-- lvim.plugins["12"]["6"].config = function ()
lvim.plugins["12"]["6"].event = "BufRead"
lvim.plugins["12"]["7"]["1"] = "dhruvasagar/vim-table-mode"
lvim.plugins["12"]["7"].cmd = "TableModeToggle"
lvim.plugins["12"]["7"].keys = ",tm"
-- lvim.plugins["12"]["7"].setup = function ()
lvim.plugins["12"]["8"]["1"] = "arthurxavierx/vim-caser"
-- lvim.plugins["12"]["8"].setup = function ()
lvim.plugins["13"]["1"]["1"] = "tpope/vim-scriptease"
lvim.plugins["13"]["2"]["1"] = "tpope/vim-unimpaired"
lvim.plugins["13"]["2"].commit = "825a3ee64"
lvim.plugins["13"]["2"].opt = true
lvim.plugins["13"]["3"]["1"] = "dstein64/vim-startuptime"
lvim.plugins["13"]["3"].cmd = "StartupTime"
-- lvim.plugins["13"]["3"].setup = function ()
lvim.plugins["13"]["4"]["1"] = "nathom/filetype.nvim"
-- lvim.plugins["13"]["4"].config = function ()
-- lvim.plugins["13"]["4"].setup = function ()
lvim.plugins["13"]["5"]["1"] = "sheerun/vim-polyglot"
lvim.plugins["13"]["5"].opt = true
-- lvim.plugins["13"]["5"].setup = function ()
lvim.plugins["13"]["6"]["1"] = "max397574/better-escape.nvim"
-- lvim.plugins["13"]["6"].config = function ()
lvim.plugins["13"]["6"].event = "InsertEnter"
-- lvim.plugins["13"]["6"].setup = function ()
lvim.plugins["14"]["1"]["1"] = "beauwilliams/focus.nvim"
-- lvim.plugins["14"]["1"].config = function ()
lvim.plugins["14"]["1"].module = "focus"
lvim.plugins["14"]["2"]["1"] = "dhruvasagar/vim-zoom"
lvim.plugins["14"]["2"].keys = "<C-w>m"
lvim.plugins["14"]["3"]["1"] = "sindrets/winshift.nvim"
lvim.plugins["14"]["3"].cmd = "WinShift"
-- lvim.plugins["14"]["3"].config = function ()
-- lvim.plugins["14"]["3"].setup = function ()
lvim.plugins["14"]["4"]["1"] = "kdheepak/tabline.nvim"
-- lvim.plugins["14"]["4"].config = function ()
lvim.plugins["14"]["4"].requires["1"] = "hoob3rt/lualine.nvim"
lvim.plugins["14"]["4"].requires["2"] = "kyazdani42/nvim-web-devicons"
lvim.plugins["15"]["1"] = "hrsh7th/cmp-emoji"
lvim.plugins["16"]["1"] = "hrsh7th/cmp-calc"
lvim.plugins["17"]["1"] = "hrsh7th/cmp-cmdline"
lvim.plugins["18"]["1"] = "kevinhwang91/rnvimr"
-- lvim.plugins["18"].config = function ()
lvim.plugins["18"].disable = false
lvim.plugins["19"]["1"] = "tamago324/lir.nvim"
-- lvim.plugins["19"].config = function ()
lvim.plugins["1"].as = "younger-1"
lvim.plugins["20"]["1"] = "Shatur/neovim-session-manager"
-- lvim.plugins["20"].config = function ()
lvim.plugins["20"].event = "BufRead"
lvim.plugins["21"]["1"] = "ZSaberLv0/ZFVimDirDiff"
lvim.plugins["21"].cmd["1"] = "ZFDirDiff"
lvim.plugins["21"].cmd["2"] = "ZFDirDiffMark"
-- lvim.plugins["21"].setup = function ()
lvim.plugins["2"]["1"] = "windwp/nvim-ts-autotag"
lvim.plugins["22"]["1"] = "windwp/nvim-spectre"
-- lvim.plugins["22"].config = function ()
lvim.plugins["22"].event = "BufRead"
lvim.plugins["23"]["1"] = "ibhagwan/fzf-lua"
-- lvim.plugins["23"].config = function ()
lvim.plugins["23"].disable = false
lvim.plugins["23"].module = "fzf-lua"
lvim.plugins["24"]["1"] = "nvim-telescope/telescope-symbols.nvim"
lvim.plugins["25"]["1"] = "nvim-telescope/telescope-packer.nvim"
lvim.plugins["26"]["1"] = "nvim-telescope/telescope-frecency.nvim"
-- lvim.plugins["26"].config = function ()
lvim.plugins["26"].requires["1"]["1"] = "tami5/sqlite.lua"
lvim.plugins["26"].requires["1"].module = "sqlite"
lvim.plugins["27"]["1"] = "nvim-telescope/telescope-github.nvim"
-- lvim.plugins["27"].config = function ()
lvim.plugins["28"]["1"] = "nvim-telescope/telescope-z.nvim"
-- lvim.plugins["28"].config = function ()
lvim.plugins["29"]["1"] = "nvim-telescope/telescope-cheat.nvim"
-- lvim.plugins["29"].config = function ()
lvim.plugins["29"].requires["1"]["1"] = "tami5/sqlite.lua"
lvim.plugins["29"].requires["1"].module = "sqlite"
lvim.plugins["2"].event = "InsertEnter"
lvim.plugins["30"]["1"] = "jvgrootveld/telescope-zoxide"
-- lvim.plugins["30"].config = function ()
lvim.plugins["31"]["1"] = "AckslD/nvim-neoclip.lua"
lvim.plugins["3"]["1"]["1"] = "lukas-reineke/indent-blankline.nvim"
-- lvim.plugins["3"]["1"].config = function ()
-- lvim.plugins["31"].config = function ()
lvim.plugins["31"].requires["1"]["1"] = "tami5/sqlite.lua"
lvim.plugins["31"].requires["1"].module = "sqlite"
lvim.plugins["32"]["1"]["1"] = "liuchengxu/vista.vim"
lvim.plugins["32"]["1"].cmd = "Vista"
-- lvim.plugins["32"]["1"].config = function ()
lvim.plugins["3"]["2"]["1"] = "p00f/nvim-ts-rainbow"
lvim.plugins["32"]["2"]["1"] = "simrat39/symbols-outline.nvim"
-- lvim.plugins["32"]["2"].config = function ()
lvim.plugins["32"]["3"]["1"] = "mbbill/undotree"
lvim.plugins["32"]["3"].cmd = "UndotreeToggle"
lvim.plugins["32"]["4"]["1"] = "wfxr/minimap.vim"
lvim.plugins["32"]["4"].cmd["1"] = "MinimapToggle"
-- lvim.plugins["32"]["4"].config = function ()
lvim.plugins["32"]["5"]["1"] = "folke/trouble.nvim"
lvim.plugins["32"]["5"].cmd = "TroubleToggle"
-- lvim.plugins["32"]["5"].config = function ()
lvim.plugins["32"]["5"].module = "trouble"
lvim.plugins["33"]["1"] = "kevinhwang91/nvim-bqf"
lvim.plugins["3"]["3"]["1"] = "norcalli/nvim-colorizer.lua"
-- lvim.plugins["3"]["3"].config = function ()
-- lvim.plugins["33"].config = function ()
lvim.plugins["33"].event = "BufRead"
lvim.plugins["34"]["1"] = "tpope/vim-fugitive"
lvim.plugins["34"].cmd["1"] = "Git"
lvim.plugins["34"].cmd["2"] = "GBrowse"
lvim.plugins["34"].ft["1"] = "fugitive"
lvim.plugins["35"]["1"] = "ruifm/gitlinker.nvim"
-- lvim.plugins["35"].config = function ()
lvim.plugins["35"].event = "BufRead"
lvim.plugins["36"]["1"] = "TimUntersberger/neogit"
lvim.plugins["36"].cmd = "Neogit"
-- lvim.plugins["36"].config = function ()
lvim.plugins["36"].module = "neogit"
lvim.plugins["37"]["1"] = "sindrets/diffview.nvim"
-- lvim.plugins["37"].config = function ()
lvim.plugins["37"].event = "BufRead"
lvim.plugins["38"]["1"] = "pwntester/octo.nvim"
-- lvim.plugins["38"].config = function ()
lvim.plugins["38"].event = "BufRead"
lvim.plugins["39"]["1"] = "iamcco/markdown-preview.nvim"
lvim.plugins["39"].ft = "markdown"
lvim.plugins["39"].run = "cd app && yarn install"
lvim.plugins["40"]["1"] = "ellisonleao/glow.nvim"
lvim.plugins["40"].cmd = "Glow"
lvim.plugins["41"]["1"]["1"] = "folke/zen-mode.nvim"
-- lvim.plugins["41"]["1"].config = function ()
lvim.plugins["41"]["2"]["1"] = "vhyrro/neorg"
-- lvim.plugins["41"]["2"].config = function ()
lvim.plugins["41"]["2"].ft = "norg"
lvim.plugins["41"]["3"]["1"] = "kristijanhusak/orgmode.nvim"
-- lvim.plugins["41"]["3"].config = function ()
lvim.plugins["41"]["3"].ft["1"] = "org"
lvim.plugins["41"]["4"]["1"] = "folke/todo-comments.nvim"
-- lvim.plugins["41"]["4"].config = function ()
lvim.plugins["41"]["4"].event = "BufRead"
lvim.plugins["4"]["1"] = "mvllow/modes.nvim"
lvim.plugins["42"]["1"] = "voldikss/vim-translator"
lvim.plugins["42"].cmd["1"] = "Translate"
lvim.plugins["42"].cmd["2"] = "TranslateW"
-- lvim.plugins["42"].setup = function ()
lvim.plugins["43"]["1"] = "sudormrfbin/cheatsheet.nvim"
-- lvim.plugins["43"].config = function ()
lvim.plugins["44"]["1"] = "dbeniamine/cheat.sh-vim"
lvim.plugins["44"].cmd = "Cheat"
-- lvim.plugins["44"].config = function ()
lvim.plugins["45"]["1"] = "romainl/vim-devdocs"
lvim.plugins["45"].cmd = "DD"
-- lvim.plugins["45"].setup = function ()
lvim.plugins["46"]["1"] = "wakatime/vim-wakatime"
lvim.plugins["46"].event = "BufReadPost"
lvim.plugins["47"]["1"] = "ray-x/lsp_signature.nvim"
-- lvim.plugins["47"].config = function ()
lvim.plugins["47"].event = "BufRead"
lvim.plugins["48"]["1"] = "weilbith/nvim-code-action-menu"
lvim.plugins["48"].cmd = "CodeActionMenu"
lvim.plugins["49"]["1"] = "kosayoda/nvim-lightbulb"
-- lvim.plugins["49"].config = function ()
lvim.plugins["49"].event = "BufRead"
-- lvim.plugins["4"].config = function ()
lvim.plugins["4"].opt = true
lvim.plugins["50"]["1"] = "arkav/lualine-lsp-progress"
lvim.plugins["51"]["1"] = "kamykn/spelunker.vim"
-- lvim.plugins["51"].config = function ()
lvim.plugins["51"].event = "BufRead"
lvim.plugins["5"]["1"] = "nvim-treesitter/nvim-treesitter-textobjects"
lvim.plugins["52"]["10"]["1"] = "shaunsingh/nord.nvim"
-- lvim.plugins["52"]["10"].setup = function ()
lvim.plugins["52"]["11"]["1"] = "tanvirtin/monokai.nvim"
-- lvim.plugins["52"]["11"].setup = function ()
lvim.plugins["52"]["12"]["1"] = "Mofiqul/vscode.nvim"
-- lvim.plugins["52"]["12"].setup = function ()
lvim.plugins["52"]["13"]["1"] = "EdenEast/nightfox.nvim"
-- lvim.plugins["52"]["13"].setup = function ()
lvim.plugins["52"]["14"]["1"] = "ful1e5/onedark.nvim"
-- lvim.plugins["52"]["14"].setup = function ()
lvim.plugins["52"]["1"] = "sainnhe/sonokai"
lvim.plugins["52"]["2"] = "sainnhe/edge"
lvim.plugins["52"]["3"] = "sainnhe/everforest"
lvim.plugins["52"]["4"] = "sainnhe/gruvbox-material"
lvim.plugins["52"]["5"] = "NLKNguyen/papercolor-theme"
lvim.plugins["52"]["6"] = "bluz71/vim-moonfly-colors"
lvim.plugins["52"]["7"] = "bluz71/vim-nightfly-guicolors"
lvim.plugins["52"]["8"]["1"] = "folke/tokyonight.nvim"
-- lvim.plugins["52"]["8"].setup = function ()
lvim.plugins["52"]["9"]["1"] = "marko-cerovac/material.nvim"
-- lvim.plugins["52"]["9"].setup = function ()
lvim.plugins["5"].branch = "master"
lvim.plugins["5"].event = "BufRead"
lvim.plugins["6"]["1"] = "nvim-treesitter/playground"
lvim.plugins["6"].event = "BufRead"
lvim.plugins["7"]["1"] = "nvim-treesitter/nvim-treesitter-refactor"
lvim.plugins["7"].event = "BufRead"
lvim.plugins["8"]["1"] = "RRethy/nvim-treesitter-textsubjects"
lvim.plugins["8"].event = "BufRead"
lvim.plugins["9"]["1"] = "romgrk/nvim-treesitter-context"
lvim.plugins["9"].cmd = "TSContextToggle"
-- lvim.plugins["9"].config = function ()
lvim.transparent_window = false
lvim.vsnip_dir = "/home/xavier/.config/snippets"
